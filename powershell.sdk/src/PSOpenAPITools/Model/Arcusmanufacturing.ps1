#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Manufacturing information

.PARAMETER AssemblyRev
Assembly revision
.PARAMETER CheckSum
Checksum
.PARAMETER HpeModelName
HPE model name
.PARAMETER Manufacturer
Manufacturer. `Filter, Sort`
.PARAMETER Model
Model
.PARAMETER SaleablePartNumber
Saleable part number
.PARAMETER SaleableSerialNumber
Saleable serial number
.PARAMETER SerialNumber
Serial number. `Filter, Sort`
.PARAMETER SparePartNumber
Spare part number
.OUTPUTS

Arcusmanufacturing<PSCustomObject>
#>

function Initialize-Arcusmanufacturing {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AssemblyRev},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CheckSum},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HpeModelName},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Manufacturer},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Model},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SaleablePartNumber},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SaleableSerialNumber},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SerialNumber},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SparePartNumber}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => Arcusmanufacturing' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "assemblyRev" = ${AssemblyRev}
            "checkSum" = ${CheckSum}
            "hpeModelName" = ${HpeModelName}
            "manufacturer" = ${Manufacturer}
            "model" = ${Model}
            "saleablePartNumber" = ${SaleablePartNumber}
            "saleableSerialNumber" = ${SaleableSerialNumber}
            "serialNumber" = ${SerialNumber}
            "sparePartNumber" = ${SparePartNumber}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Arcusmanufacturing<PSCustomObject>

.DESCRIPTION

Convert from JSON to Arcusmanufacturing<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Arcusmanufacturing<PSCustomObject>
#>
function ConvertFrom-JsonToArcusmanufacturing {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => Arcusmanufacturing' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Arcusmanufacturing
        $AllProperties = ("assemblyRev", "checkSum", "hpeModelName", "manufacturer", "model", "saleablePartNumber", "saleableSerialNumber", "serialNumber", "sparePartNumber")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "assemblyRev"))) { #optional property not found
            $AssemblyRev = $null
        } else {
            $AssemblyRev = $JsonParameters.PSobject.Properties["assemblyRev"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "checkSum"))) { #optional property not found
            $CheckSum = $null
        } else {
            $CheckSum = $JsonParameters.PSobject.Properties["checkSum"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "hpeModelName"))) { #optional property not found
            $HpeModelName = $null
        } else {
            $HpeModelName = $JsonParameters.PSobject.Properties["hpeModelName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "manufacturer"))) { #optional property not found
            $Manufacturer = $null
        } else {
            $Manufacturer = $JsonParameters.PSobject.Properties["manufacturer"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "model"))) { #optional property not found
            $Model = $null
        } else {
            $Model = $JsonParameters.PSobject.Properties["model"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "saleablePartNumber"))) { #optional property not found
            $SaleablePartNumber = $null
        } else {
            $SaleablePartNumber = $JsonParameters.PSobject.Properties["saleablePartNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "saleableSerialNumber"))) { #optional property not found
            $SaleableSerialNumber = $null
        } else {
            $SaleableSerialNumber = $JsonParameters.PSobject.Properties["saleableSerialNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "serialNumber"))) { #optional property not found
            $SerialNumber = $null
        } else {
            $SerialNumber = $JsonParameters.PSobject.Properties["serialNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sparePartNumber"))) { #optional property not found
            $SparePartNumber = $null
        } else {
            $SparePartNumber = $JsonParameters.PSobject.Properties["sparePartNumber"].value
        }

        $PSO = [PSCustomObject]@{
            "assemblyRev" = ${AssemblyRev}
            "checkSum" = ${CheckSum}
            "hpeModelName" = ${HpeModelName}
            "manufacturer" = ${Manufacturer}
            "model" = ${Model}
            "saleablePartNumber" = ${SaleablePartNumber}
            "saleableSerialNumber" = ${SaleableSerialNumber}
            "serialNumber" = ${SerialNumber}
            "sparePartNumber" = ${SparePartNumber}
        }

        return $PSO
    }

}

