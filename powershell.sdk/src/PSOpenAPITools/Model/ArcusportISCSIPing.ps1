#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER IpAddress
IP Address to ping
.PARAMETER IpAddressv6
IP Address to ping
.PARAMETER PingCount
ping count
.PARAMETER VlanId
VLAN ID
.OUTPUTS

ArcusportISCSIPing<PSCustomObject>
#>

function Initialize-ArcusportISCSIPing {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IpAddress},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IpAddressv6},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PingCount},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VlanId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusportISCSIPing' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "ipAddress" = ${IpAddress}
            "ipAddressv6" = ${IpAddressv6}
            "pingCount" = ${PingCount}
            "vlanId" = ${VlanId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusportISCSIPing<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusportISCSIPing<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusportISCSIPing<PSCustomObject>
#>
function ConvertFrom-JsonToArcusportISCSIPing {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusportISCSIPing' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusportISCSIPing
        $AllProperties = ("ipAddress", "ipAddressv6", "pingCount", "vlanId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ipAddress"))) { #optional property not found
            $IpAddress = $null
        } else {
            $IpAddress = $JsonParameters.PSobject.Properties["ipAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ipAddressv6"))) { #optional property not found
            $IpAddressv6 = $null
        } else {
            $IpAddressv6 = $JsonParameters.PSobject.Properties["ipAddressv6"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pingCount"))) { #optional property not found
            $PingCount = $null
        } else {
            $PingCount = $JsonParameters.PSobject.Properties["pingCount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vlanId"))) { #optional property not found
            $VlanId = $null
        } else {
            $VlanId = $JsonParameters.PSobject.Properties["vlanId"].value
        }

        $PSO = [PSCustomObject]@{
            "ipAddress" = ${IpAddress}
            "ipAddressv6" = ${IpAddressv6}
            "pingCount" = ${PingCount}
            "vlanId" = ${VlanId}
        }

        return $PSO
    }

}

