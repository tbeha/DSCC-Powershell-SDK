#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER FreeSizeMiB
Free size in MiB
.PARAMETER UsedSizeMiB
Used size in MiB
.OUTPUTS

ArcusutilizationSummaryCapacityUsageData<PSCustomObject>
#>

function Initialize-ArcusutilizationSummaryCapacityUsageData {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${FreeSizeMiB},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${UsedSizeMiB}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusutilizationSummaryCapacityUsageData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "freeSizeMiB" = ${FreeSizeMiB}
            "usedSizeMiB" = ${UsedSizeMiB}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusutilizationSummaryCapacityUsageData<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusutilizationSummaryCapacityUsageData<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusutilizationSummaryCapacityUsageData<PSCustomObject>
#>
function ConvertFrom-JsonToArcusutilizationSummaryCapacityUsageData {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusutilizationSummaryCapacityUsageData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusutilizationSummaryCapacityUsageData
        $AllProperties = ("freeSizeMiB", "usedSizeMiB")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "freeSizeMiB"))) { #optional property not found
            $FreeSizeMiB = $null
        } else {
            $FreeSizeMiB = $JsonParameters.PSobject.Properties["freeSizeMiB"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "usedSizeMiB"))) { #optional property not found
            $UsedSizeMiB = $null
        } else {
            $UsedSizeMiB = $JsonParameters.PSobject.Properties["usedSizeMiB"].value
        }

        $PSO = [PSCustomObject]@{
            "freeSizeMiB" = ${FreeSizeMiB}
            "usedSizeMiB" = ${UsedSizeMiB}
        }

        return $PSO
    }

}

