#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER DnsServers
IP addresses for this groups dns servers. List of IP Addresses.
.PARAMETER DomainName
Domain name for this group. String of alphanumeric characters, valid range is from 2 to 255; Each label must be between 1 and 63 characters long; - and . are allowed after the first and before the last character.
.OUTPUTS

EditDnsSettings<PSCustomObject>
#>

function Initialize-EditDnsSettings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${DnsServers},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DomainName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => EditDnsSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "dns_servers" = ${DnsServers}
            "domain_name" = ${DomainName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EditDnsSettings<PSCustomObject>

.DESCRIPTION

Convert from JSON to EditDnsSettings<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EditDnsSettings<PSCustomObject>
#>
function ConvertFrom-JsonToEditDnsSettings {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => EditDnsSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in EditDnsSettings
        $AllProperties = ("dns_servers", "domain_name")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dns_servers"))) { #optional property not found
            $DnsServers = $null
        } else {
            $DnsServers = $JsonParameters.PSobject.Properties["dns_servers"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "domain_name"))) { #optional property not found
            $DomainName = $null
        } else {
            $DomainName = $JsonParameters.PSobject.Properties["domain_name"].value
        }

        $PSO = [PSCustomObject]@{
            "dns_servers" = ${DnsServers}
            "domain_name" = ${DomainName}
        }

        return $PSO
    }

}

