#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Create Nimble clone volume input.

.PARAMETER CloneVolumeName
Name of the clone volume.
.PARAMETER HostGroupId
Identifier for the host group.
.PARAMETER Lun
Custom LUN ID for the host group. Specify integer in the range 0 to 2047.
.OUTPUTS

NimbleCloneVolumeInput<PSCustomObject>
#>

function Initialize-NimbleCloneVolumeInput {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CloneVolumeName},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HostGroupId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Lun}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleCloneVolumeInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $CloneVolumeName) {
            throw "invalid value for 'CloneVolumeName', 'CloneVolumeName' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "clone_volume_name" = ${CloneVolumeName}
            "host_group_id" = ${HostGroupId}
            "lun" = ${Lun}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleCloneVolumeInput<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleCloneVolumeInput<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleCloneVolumeInput<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleCloneVolumeInput {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleCloneVolumeInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleCloneVolumeInput
        $AllProperties = ("clone_volume_name", "host_group_id", "lun")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'clone_volume_name' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "clone_volume_name"))) {
            throw "Error! JSON cannot be serialized due to the required property 'clone_volume_name' missing."
        } else {
            $CloneVolumeName = $JsonParameters.PSobject.Properties["clone_volume_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "host_group_id"))) { #optional property not found
            $HostGroupId = $null
        } else {
            $HostGroupId = $JsonParameters.PSobject.Properties["host_group_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lun"))) { #optional property not found
            $Lun = $null
        } else {
            $Lun = $JsonParameters.PSobject.Properties["lun"].value
        }

        $PSO = [PSCustomObject]@{
            "clone_volume_name" = ${CloneVolumeName}
            "host_group_id" = ${HostGroupId}
            "lun" = ${Lun}
        }

        return $PSO
    }

}

