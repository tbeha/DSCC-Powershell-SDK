#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'PortsApi' {
    Context 'Invoke-DeviceType1FcPortEdit' {
        It 'Test Invoke-DeviceType1FcPortEdit' {
            #$TestResult = Invoke-DeviceType1FcPortEdit -SystemId "TEST_VALUE" -Id "TEST_VALUE" -PortFCEdit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1InitialisePorts' {
        It 'Test Invoke-DeviceType1InitialisePorts' {
            #$TestResult = Invoke-DeviceType1InitialisePorts -SystemId "TEST_VALUE" -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1IscsiPortEdit' {
        It 'Test Invoke-DeviceType1IscsiPortEdit' {
            #$TestResult = Invoke-DeviceType1IscsiPortEdit -SystemId "TEST_VALUE" -Id "TEST_VALUE" -PortISCSIEdit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1IscsiPortPing' {
        It 'Test Invoke-DeviceType1IscsiPortPing' {
            #$TestResult = Invoke-DeviceType1IscsiPortPing -SystemId "TEST_VALUE" -Id "TEST_VALUE" -PortISCSIPing "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1PortEnableById' {
        It 'Test Invoke-DeviceType1PortEnableById' {
            #$TestResult = Invoke-DeviceType1PortEnableById -SystemId "TEST_VALUE" -Id "TEST_VALUE" -PortEnableInput "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1PortsClear' {
        It 'Test Invoke-DeviceType1PortsClear' {
            #$TestResult = Invoke-DeviceType1PortsClear -SystemId "TEST_VALUE" -Id "TEST_VALUE" -PortClearInput "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1PortsGetById' {
        It 'Test Invoke-DeviceType1PortsGetById' {
            #$TestResult = Invoke-DeviceType1PortsGetById -SystemId "TEST_VALUE" -Id "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1PortsList' {
        It 'Test Invoke-DeviceType1PortsList' {
            #$TestResult = Invoke-DeviceType1PortsList -SystemId "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Filter "TEST_VALUE" -Sort "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1PortsPerformanceHistoryGet' {
        It 'Test Invoke-DeviceType1PortsPerformanceHistoryGet' {
            #$TestResult = Invoke-DeviceType1PortsPerformanceHistoryGet -SystemId "TEST_VALUE" -ReportType "TEST_VALUE" -Range "TEST_VALUE" -TimeIntervalMin "TEST_VALUE" -CompareBy "TEST_VALUE" -GroupBy "TEST_VALUE" -MetricType "TEST_VALUE" -Filter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1RcipPortEdit' {
        It 'Test Invoke-DeviceType1RcipPortEdit' {
            #$TestResult = Invoke-DeviceType1RcipPortEdit -SystemId "TEST_VALUE" -Id "TEST_VALUE" -PortRCIPEdit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType1RcipPortPing' {
        It 'Test Invoke-DeviceType1RcipPortPing' {
            #$TestResult = Invoke-DeviceType1RcipPortPing -SystemId "TEST_VALUE" -Id "TEST_VALUE" -PortRCIPPing "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType2EditFCPort' {
        It 'Test Invoke-DeviceType2EditFCPort' {
            #$TestResult = Invoke-DeviceType2EditFCPort -SystemId "TEST_VALUE" -PortId "TEST_VALUE" -NimbleEditFCInterfaceInput "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType2GetAllFibreChannelConfigs' {
        It 'Test Invoke-DeviceType2GetAllFibreChannelConfigs' {
            #$TestResult = Invoke-DeviceType2GetAllFibreChannelConfigs -SystemId "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Filter "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType2GetAllFibreChannelSessions' {
        It 'Test Invoke-DeviceType2GetAllFibreChannelSessions' {
            #$TestResult = Invoke-DeviceType2GetAllFibreChannelSessions -SystemId "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Filter "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType2GetAllPorts' {
        It 'Test Invoke-DeviceType2GetAllPorts' {
            #$TestResult = Invoke-DeviceType2GetAllPorts -SystemId "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Filter "TEST_VALUE" -Sort "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType2GetFibreChannelConfigById' {
        It 'Test Invoke-DeviceType2GetFibreChannelConfigById' {
            #$TestResult = Invoke-DeviceType2GetFibreChannelConfigById -SystemId "TEST_VALUE" -FcConfigId "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType2GetFibreChannelSessionById' {
        It 'Test Invoke-DeviceType2GetFibreChannelSessionById' {
            #$TestResult = Invoke-DeviceType2GetFibreChannelSessionById -SystemId "TEST_VALUE" -FcSessionId "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType2GetPortById' {
        It 'Test Invoke-DeviceType2GetPortById' {
            #$TestResult = Invoke-DeviceType2GetPortById -SystemId "TEST_VALUE" -PortId "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4FcPortEdit' {
        It 'Test Invoke-DeviceType4FcPortEdit' {
            #$TestResult = Invoke-DeviceType4FcPortEdit -SystemId "TEST_VALUE" -Id "TEST_VALUE" -ArcusportFCEdit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4IscsiPortEdit' {
        It 'Test Invoke-DeviceType4IscsiPortEdit' {
            #$TestResult = Invoke-DeviceType4IscsiPortEdit -SystemId "TEST_VALUE" -Id "TEST_VALUE" -ArcusportISCSIEdit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4IscsiPortPing' {
        It 'Test Invoke-DeviceType4IscsiPortPing' {
            #$TestResult = Invoke-DeviceType4IscsiPortPing -SystemId "TEST_VALUE" -Id "TEST_VALUE" -ArcusportISCSIPing "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4PortsClear' {
        It 'Test Invoke-DeviceType4PortsClear' {
            #$TestResult = Invoke-DeviceType4PortsClear -SystemId "TEST_VALUE" -Id "TEST_VALUE" -ArcusportClearInput "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4PortsGetById' {
        It 'Test Invoke-DeviceType4PortsGetById' {
            #$TestResult = Invoke-DeviceType4PortsGetById -SystemId "TEST_VALUE" -Id "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4PortsList' {
        It 'Test Invoke-DeviceType4PortsList' {
            #$TestResult = Invoke-DeviceType4PortsList -SystemId "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Filter "TEST_VALUE" -Sort "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4PortsPerformanceHistoryGet' {
        It 'Test Invoke-DeviceType4PortsPerformanceHistoryGet' {
            #$TestResult = Invoke-DeviceType4PortsPerformanceHistoryGet -SystemId "TEST_VALUE" -ReportType "TEST_VALUE" -Range "TEST_VALUE" -TimeIntervalMin "TEST_VALUE" -CompareBy "TEST_VALUE" -GroupBy "TEST_VALUE" -MetricType "TEST_VALUE" -Filter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4RcipPortEdit' {
        It 'Test Invoke-DeviceType4RcipPortEdit' {
            #$TestResult = Invoke-DeviceType4RcipPortEdit -SystemId "TEST_VALUE" -Id "TEST_VALUE" -ArcusportRCIPEdit "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeviceType4RcipPortPing' {
        It 'Test Invoke-DeviceType4RcipPortPing' {
            #$TestResult = Invoke-DeviceType4RcipPortPing -SystemId "TEST_VALUE" -Id "TEST_VALUE" -ArcusportRCIPPing "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-DeviceType2NetworkInterfaceById' {
        It 'Test Get-DeviceType2NetworkInterfaceById' {
            #$TestResult = Get-DeviceType2NetworkInterfaceById -SystemId "TEST_VALUE" -NetworkInterfaceId "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-DeviceType2NetworkInterfaces' {
        It 'Test Get-DeviceType2NetworkInterfaces' {
            #$TestResult = Get-DeviceType2NetworkInterfaces -SystemId "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Filter "TEST_VALUE" -Sort "TEST_VALUE" -Select "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'ConvertTo-itialisePorts' {
        It 'Test ConvertTo-itialisePorts' {
            #$TestResult = ConvertTo-itialisePorts -SystemId "TEST_VALUE" -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PortEnable' {
        It 'Test Invoke-PortEnable' {
            #$TestResult = Invoke-PortEnable -SystemId "TEST_VALUE" -Id "TEST_VALUE" -ArcusportEnableInput "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
