#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AlertFromEmailAddr
From email address to use while sending emails. Case insensitive email address.
.PARAMETER AlertMinLevel
Minimum level of alert to be notified. Possible values: 'info', 'notice', 'warning', 'critical'.
.PARAMETER AlertToEmailAddrs
Comma-separated list of email addresss to receive emails.
.PARAMETER SendAlertToSupport
Enable or disable alert to support
.OUTPUTS

EditAlertSettings<PSCustomObject>
#>

function Initialize-EditAlertSettings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AlertFromEmailAddr},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AlertMinLevel},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AlertToEmailAddrs},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${SendAlertToSupport}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => EditAlertSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "alert_from_email_addr" = ${AlertFromEmailAddr}
            "alert_min_level" = ${AlertMinLevel}
            "alert_to_email_addrs" = ${AlertToEmailAddrs}
            "send_alert_to_support" = ${SendAlertToSupport}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EditAlertSettings<PSCustomObject>

.DESCRIPTION

Convert from JSON to EditAlertSettings<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EditAlertSettings<PSCustomObject>
#>
function ConvertFrom-JsonToEditAlertSettings {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => EditAlertSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in EditAlertSettings
        $AllProperties = ("alert_from_email_addr", "alert_min_level", "alert_to_email_addrs", "send_alert_to_support")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "alert_from_email_addr"))) { #optional property not found
            $AlertFromEmailAddr = $null
        } else {
            $AlertFromEmailAddr = $JsonParameters.PSobject.Properties["alert_from_email_addr"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "alert_min_level"))) { #optional property not found
            $AlertMinLevel = $null
        } else {
            $AlertMinLevel = $JsonParameters.PSobject.Properties["alert_min_level"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "alert_to_email_addrs"))) { #optional property not found
            $AlertToEmailAddrs = $null
        } else {
            $AlertToEmailAddrs = $JsonParameters.PSobject.Properties["alert_to_email_addrs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "send_alert_to_support"))) { #optional property not found
            $SendAlertToSupport = $null
        } else {
            $SendAlertToSupport = $JsonParameters.PSobject.Properties["send_alert_to_support"].value
        }

        $PSO = [PSCustomObject]@{
            "alert_from_email_addr" = ${AlertFromEmailAddr}
            "alert_min_level" = ${AlertMinLevel}
            "alert_to_email_addrs" = ${AlertToEmailAddrs}
            "send_alert_to_support" = ${SendAlertToSupport}
        }

        return $PSO
    }

}

