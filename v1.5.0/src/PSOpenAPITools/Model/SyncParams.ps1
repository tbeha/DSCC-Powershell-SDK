#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ForceFullSync
Forces full synchronization, even if volumes are already synchronized. This option is only applicable for volume sets with synchronous replication. For SLD, 3DC PP and 3DC APP configurations full synchronization will happen on sync target.
.PARAMETER NotSaveResyncSnap
Do not save resynchronization snapshot. This option is only applicable for volume sets with asynchronous replication.
.PARAMETER TargetName
Replication partner name (target name) on which the sync action to be performed.
.OUTPUTS

SyncParams<PSCustomObject>
#>

function Initialize-SyncParams {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${ForceFullSync},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${NotSaveResyncSnap},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TargetName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SyncParams' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "forceFullSync" = ${ForceFullSync}
            "notSaveResyncSnap" = ${NotSaveResyncSnap}
            "targetName" = ${TargetName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SyncParams<PSCustomObject>

.DESCRIPTION

Convert from JSON to SyncParams<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SyncParams<PSCustomObject>
#>
function ConvertFrom-JsonToSyncParams {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SyncParams' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SyncParams
        $AllProperties = ("forceFullSync", "notSaveResyncSnap", "targetName")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "forceFullSync"))) { #optional property not found
            $ForceFullSync = $null
        } else {
            $ForceFullSync = $JsonParameters.PSobject.Properties["forceFullSync"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "notSaveResyncSnap"))) { #optional property not found
            $NotSaveResyncSnap = $null
        } else {
            $NotSaveResyncSnap = $JsonParameters.PSobject.Properties["notSaveResyncSnap"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "targetName"))) { #optional property not found
            $TargetName = $null
        } else {
            $TargetName = $JsonParameters.PSobject.Properties["targetName"].value
        }

        $PSO = [PSCustomObject]@{
            "forceFullSync" = ${ForceFullSync}
            "notSaveResyncSnap" = ${NotSaveResyncSnap}
            "targetName" = ${TargetName}
        }

        return $PSO
    }

}

