#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Protection policy to be removed

.PARAMETER Remote
Remote protection to be removed
.PARAMETER RemoveOnlySchedules
Remove only schedules and retain remote protection
.PARAMETER RemoveSchedules
List of protection schedules to be removed
.PARAMETER SecondaryRemote
Secondary remote protection to be removed
.OUTPUTS

ArcusRemoveProtectionPolicyInputSchema<PSCustomObject>
#>

function Initialize-ArcusRemoveProtectionPolicyInputSchema {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Remote},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${RemoveOnlySchedules},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${RemoveSchedules},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${SecondaryRemote}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusRemoveProtectionPolicyInputSchema' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "remote" = ${Remote}
            "removeOnlySchedules" = ${RemoveOnlySchedules}
            "removeSchedules" = ${RemoveSchedules}
            "secondaryRemote" = ${SecondaryRemote}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusRemoveProtectionPolicyInputSchema<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusRemoveProtectionPolicyInputSchema<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusRemoveProtectionPolicyInputSchema<PSCustomObject>
#>
function ConvertFrom-JsonToArcusRemoveProtectionPolicyInputSchema {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusRemoveProtectionPolicyInputSchema' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusRemoveProtectionPolicyInputSchema
        $AllProperties = ("remote", "removeOnlySchedules", "removeSchedules", "secondaryRemote")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "remote"))) { #optional property not found
            $Remote = $null
        } else {
            $Remote = $JsonParameters.PSobject.Properties["remote"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "removeOnlySchedules"))) { #optional property not found
            $RemoveOnlySchedules = $null
        } else {
            $RemoveOnlySchedules = $JsonParameters.PSobject.Properties["removeOnlySchedules"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "removeSchedules"))) { #optional property not found
            $RemoveSchedules = $null
        } else {
            $RemoveSchedules = $JsonParameters.PSobject.Properties["removeSchedules"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "secondaryRemote"))) { #optional property not found
            $SecondaryRemote = $null
        } else {
            $SecondaryRemote = $JsonParameters.PSobject.Properties["secondaryRemote"].value
        }

        $PSO = [PSCustomObject]@{
            "remote" = ${Remote}
            "removeOnlySchedules" = ${RemoveOnlySchedules}
            "removeSchedules" = ${RemoveSchedules}
            "secondaryRemote" = ${SecondaryRemote}
        }

        return $PSO
    }

}

