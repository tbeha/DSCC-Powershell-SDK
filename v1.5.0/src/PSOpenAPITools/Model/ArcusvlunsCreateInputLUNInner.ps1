#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER LUN
Logical Unit Number
.PARAMETER HostGroupId
Host group Id
.PARAMETER NvmeTransportType
Transport type of the protocol. Configuration of the transport type is only supported for NVMe protocol starting from the system OS version 10.3.0 and the default transport type value is FC.
.OUTPUTS

ArcusvlunsCreateInputLUNInner<PSCustomObject>
#>

function Initialize-ArcusvlunsCreateInputLUNInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${LUN},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HostGroupId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${NvmeTransportType}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusvlunsCreateInputLUNInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "LUN" = ${LUN}
            "hostGroupId" = ${HostGroupId}
            "nvmeTransportType" = ${NvmeTransportType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusvlunsCreateInputLUNInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusvlunsCreateInputLUNInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusvlunsCreateInputLUNInner<PSCustomObject>
#>
function ConvertFrom-JsonToArcusvlunsCreateInputLUNInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusvlunsCreateInputLUNInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusvlunsCreateInputLUNInner
        $AllProperties = ("LUN", "hostGroupId", "nvmeTransportType")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "LUN"))) { #optional property not found
            $LUN = $null
        } else {
            $LUN = $JsonParameters.PSobject.Properties["LUN"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "hostGroupId"))) { #optional property not found
            $HostGroupId = $null
        } else {
            $HostGroupId = $JsonParameters.PSobject.Properties["hostGroupId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "nvmeTransportType"))) { #optional property not found
            $NvmeTransportType = $null
        } else {
            $NvmeTransportType = $JsonParameters.PSobject.Properties["nvmeTransportType"].value
        }

        $PSO = [PSCustomObject]@{
            "LUN" = ${LUN}
            "hostGroupId" = ${HostGroupId}
            "nvmeTransportType" = ${NvmeTransportType}
        }

        return $PSO
    }

}

