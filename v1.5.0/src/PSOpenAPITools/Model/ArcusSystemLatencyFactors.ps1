#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

system latency factors response structure

.PARAMETER CustomerId
Customer identifier
.PARAMETER EndTime
End time of the interval for which latency factors are determined
.PARAMETER LatencyBands
No description available.
.PARAMETER StartTime
Start time of the interval for which latency factors are determined
.PARAMETER SystemFactorsMetrics
No description available.
.PARAMETER SystemId
System identifier
.OUTPUTS

ArcusSystemLatencyFactors<PSCustomObject>
#>

function Initialize-ArcusSystemLatencyFactors {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${EndTime},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${LatencyBands},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${StartTime},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${SystemFactorsMetrics},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SystemId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusSystemLatencyFactors' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "customerId" = ${CustomerId}
            "endTime" = ${EndTime}
            "latencyBands" = ${LatencyBands}
            "startTime" = ${StartTime}
            "systemFactorsMetrics" = ${SystemFactorsMetrics}
            "systemId" = ${SystemId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusSystemLatencyFactors<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusSystemLatencyFactors<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusSystemLatencyFactors<PSCustomObject>
#>
function ConvertFrom-JsonToArcusSystemLatencyFactors {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusSystemLatencyFactors' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusSystemLatencyFactors
        $AllProperties = ("customerId", "endTime", "latencyBands", "startTime", "systemFactorsMetrics", "systemId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerId"))) { #optional property not found
            $CustomerId = $null
        } else {
            $CustomerId = $JsonParameters.PSobject.Properties["customerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "endTime"))) { #optional property not found
            $EndTime = $null
        } else {
            $EndTime = $JsonParameters.PSobject.Properties["endTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "latencyBands"))) { #optional property not found
            $LatencyBands = $null
        } else {
            $LatencyBands = $JsonParameters.PSobject.Properties["latencyBands"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "startTime"))) { #optional property not found
            $StartTime = $null
        } else {
            $StartTime = $JsonParameters.PSobject.Properties["startTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "systemFactorsMetrics"))) { #optional property not found
            $SystemFactorsMetrics = $null
        } else {
            $SystemFactorsMetrics = $JsonParameters.PSobject.Properties["systemFactorsMetrics"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "systemId"))) { #optional property not found
            $SystemId = $null
        } else {
            $SystemId = $JsonParameters.PSobject.Properties["systemId"].value
        }

        $PSO = [PSCustomObject]@{
            "customerId" = ${CustomerId}
            "endTime" = ${EndTime}
            "latencyBands" = ${LatencyBands}
            "startTime" = ${StartTime}
            "systemFactorsMetrics" = ${SystemFactorsMetrics}
            "systemId" = ${SystemId}
        }

        return $PSO
    }

}

