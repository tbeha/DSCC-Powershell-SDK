#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Host group details for the volumes to be exported for data access.

.PARAMETER HostGroupId
Identifier for the host group.
.PARAMETER Lun
Custom LUN ID for the host group. Specify integer in the range 0 to 2047.
.OUTPUTS

NimbleHostGroupDetails<PSCustomObject>
#>

function Initialize-NimbleHostGroupDetails {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HostGroupId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Lun}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleHostGroupDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "host_group_id" = ${HostGroupId}
            "lun" = ${Lun}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleHostGroupDetails<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleHostGroupDetails<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleHostGroupDetails<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleHostGroupDetails {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleHostGroupDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleHostGroupDetails
        $AllProperties = ("host_group_id", "lun")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "host_group_id"))) { #optional property not found
            $HostGroupId = $null
        } else {
            $HostGroupId = $JsonParameters.PSobject.Properties["host_group_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lun"))) { #optional property not found
            $Lun = $null
        } else {
            $Lun = $JsonParameters.PSobject.Properties["lun"].value
        }

        $PSO = [PSCustomObject]@{
            "host_group_id" = ${HostGroupId}
            "lun" = ${Lun}
        }

        return $PSO
    }

}

