#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER InitiatorsToCreate
List of initiators to be created and added to this host
.PARAMETER Name
Name of the host.
.PARAMETER UpdatedInitiators
List of existing initiator IDs to be replaced to the host
.OUTPUTS

UpdateHostInput<PSCustomObject>
#>

function Initialize-UpdateHostInput {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${InitiatorsToCreate},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${UpdatedInitiators}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => UpdateHostInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "initiatorsToCreate" = ${InitiatorsToCreate}
            "name" = ${Name}
            "updatedInitiators" = ${UpdatedInitiators}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UpdateHostInput<PSCustomObject>

.DESCRIPTION

Convert from JSON to UpdateHostInput<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UpdateHostInput<PSCustomObject>
#>
function ConvertFrom-JsonToUpdateHostInput {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => UpdateHostInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UpdateHostInput
        $AllProperties = ("initiatorsToCreate", "name", "updatedInitiators")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "initiatorsToCreate"))) { #optional property not found
            $InitiatorsToCreate = $null
        } else {
            $InitiatorsToCreate = $JsonParameters.PSobject.Properties["initiatorsToCreate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "updatedInitiators"))) { #optional property not found
            $UpdatedInitiators = $null
        } else {
            $UpdatedInitiators = $JsonParameters.PSobject.Properties["updatedInitiators"].value
        }

        $PSO = [PSCustomObject]@{
            "initiatorsToCreate" = ${InitiatorsToCreate}
            "name" = ${Name}
            "updatedInitiators" = ${UpdatedInitiators}
        }

        return $PSO
    }

}

