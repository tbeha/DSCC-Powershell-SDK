#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
Identifier of pool. A 42 digit hexadecimal number. `Filter`
.PARAMETER Name
Name of pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character. `Filter, Sort`
.PARAMETER AllFlash
Indicate whether the pool is an all_flash pool.
.PARAMETER ArrayCount
Number of arrays in the pool.
.PARAMETER ArrayList
List of arrays in the pool with detailed information. When create/update array list, only arrays' id is required.
.PARAMETER AssociatedLinks
Associated Links Details
.PARAMETER CacheCapacity
Total usable cache capacity of the pool in bytes.
.PARAMETER Capacity
Total storage space of the pool in bytes.
.PARAMETER CloneRatio
Clone savings for the pool expressed as ratio. Fraction expressed as floating point number.
.PARAMETER CompressionRatio
Compression savings for the pool expressed as ratio. Fraction expressed as floating point number.
.PARAMETER ConsoleUri
consoleUri for detailed storage object
.PARAMETER CreationTime
Time when this pool was created. Seconds since last epoch i.e. 00:00 January 1, 1970.
.PARAMETER CustomerId
customerId
.PARAMETER DataReductionRatio
Space usage savings in the pool expressed as ratio that does not include thin-provisioning savings. Fraction expressed as floating point number.
.PARAMETER DedupeAllVolumes
Indicates if dedupe is enabled by default for new volumes on this pool.
.PARAMETER DedupeCapable
Indicates whether the pool is capable of hosting deduped volumes.
.PARAMETER DedupeCapacityBytes
The dedupe capacity of a hybrid pool. Does not apply to all-flash pools.
.PARAMETER DedupeRatio
Dedupe savings for the pool expressed as ratio. Fraction expressed as floating point number.
.PARAMETER DedupeUsageBytes
The dedupe usage of a hybrid pool. Does not apply to all-flash pools.
.PARAMETER Description
Text description of pool. String of up to 255 printable ASCII characters.
.PARAMETER FolderList
The list of fully qualified names of folders in the pool.
.PARAMETER FreeSpace
Free space of the pool in bytes.
.PARAMETER FullName
Fully qualified name of pool. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.
.PARAMETER Generation
generation
.PARAMETER IsDefault
Indicates if this is the default pool.
.PARAMETER LastModified
Time when this pool was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.
.PARAMETER PinnableCacheCapacity
Total pinnable cache capacity of the pool in bytes.
.PARAMETER PinnedCacheCapacity
Total pinned cache capacity of the pool in bytes.
.PARAMETER PinnedVolList
The list of pinned volumes in the pool.
.PARAMETER ResourceUri
Link to the object URI
.PARAMETER Savings
Overall space usage savings in the pool.
.PARAMETER SavingsClone
Space usage savings in the pool due to cloning of volumes.
.PARAMETER SavingsCompression
Space usage savings in the pool due to compression.
.PARAMETER SavingsDataReduction
Space usage savings in the pool that does not include thin-provisioning savings.
.PARAMETER SavingsDedupe
Space usage savings in the pool due to deduplication.
.PARAMETER SavingsRatio
Overall space usage savings in the pool expressed as ratio. Fraction expressed as floating point number.
.PARAMETER SavingsVolThinProvisioning
Space usage savings in the pool due to thin provisioning of volumes.
.PARAMETER SearchName
Name of pool used for object search. Alphanumeric string, up to 64 characters including hyphen, period, colon.
.PARAMETER SnapCount
Snapshot count.
.PARAMETER SnapcollCount
Snapshot collection count.
.PARAMETER Type
type
.PARAMETER UnassignedArrayList
List of arrays being unassigned from the pool.
.PARAMETER UnusedReserve
Unused reserve space of the pool in bytes.
.PARAMETER Usage
Used space of the pool in bytes.
.PARAMETER UsageValid
Identifier of pool. A 42 digit hexadecimal number.
.PARAMETER VolCount
Number of volumes assigned to the pool.
.PARAMETER VolList
The list of volumes in the pool.
.PARAMETER VolThinProvisioningRatio
Thin provisioning savings for volumes in the pool expressed as ratio. Fraction expressed as floating point number.
.OUTPUTS

NimblePoolsListItemsInner<PSCustomObject>
#>

function Initialize-NimblePoolsListItemsInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllFlash},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ArrayCount},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ArrayList},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${AssociatedLinks},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CacheCapacity},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Capacity},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${CloneRatio},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${CompressionRatio},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConsoleUri},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CreationTime},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerId},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${DataReductionRatio},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DedupeAllVolumes},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DedupeCapable},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${DedupeCapacityBytes},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${DedupeRatio},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${DedupeUsageBytes},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${FolderList},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${FreeSpace},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FullName},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Generation},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsDefault},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LastModified},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${PinnableCacheCapacity},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${PinnedCacheCapacity},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${PinnedVolList},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ResourceUri},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Savings},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SavingsClone},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SavingsCompression},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SavingsDataReduction},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SavingsDedupe},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${SavingsRatio},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SavingsVolThinProvisioning},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SearchName},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SnapCount},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SnapcollCount},
        [Parameter(Position = 40, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Type},
        [Parameter(Position = 41, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${UnassignedArrayList},
        [Parameter(Position = 42, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${UnusedReserve},
        [Parameter(Position = 43, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Usage},
        [Parameter(Position = 44, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${UsageValid},
        [Parameter(Position = 45, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${VolCount},
        [Parameter(Position = 46, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${VolList},
        [Parameter(Position = 47, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${VolThinProvisioningRatio}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimblePoolsListItemsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "all_flash" = ${AllFlash}
            "array_count" = ${ArrayCount}
            "array_list" = ${ArrayList}
            "associated_links" = ${AssociatedLinks}
            "cache_capacity" = ${CacheCapacity}
            "capacity" = ${Capacity}
            "clone_ratio" = ${CloneRatio}
            "compression_ratio" = ${CompressionRatio}
            "consoleUri" = ${ConsoleUri}
            "creation_time" = ${CreationTime}
            "customerId" = ${CustomerId}
            "data_reduction_ratio" = ${DataReductionRatio}
            "dedupe_all_volumes" = ${DedupeAllVolumes}
            "dedupe_capable" = ${DedupeCapable}
            "dedupe_capacity_bytes" = ${DedupeCapacityBytes}
            "dedupe_ratio" = ${DedupeRatio}
            "dedupe_usage_bytes" = ${DedupeUsageBytes}
            "description" = ${Description}
            "folder_list" = ${FolderList}
            "free_space" = ${FreeSpace}
            "full_name" = ${FullName}
            "generation" = ${Generation}
            "is_default" = ${IsDefault}
            "last_modified" = ${LastModified}
            "pinnable_cache_capacity" = ${PinnableCacheCapacity}
            "pinned_cache_capacity" = ${PinnedCacheCapacity}
            "pinned_vol_list" = ${PinnedVolList}
            "resourceUri" = ${ResourceUri}
            "savings" = ${Savings}
            "savings_clone" = ${SavingsClone}
            "savings_compression" = ${SavingsCompression}
            "savings_data_reduction" = ${SavingsDataReduction}
            "savings_dedupe" = ${SavingsDedupe}
            "savings_ratio" = ${SavingsRatio}
            "savings_vol_thin_provisioning" = ${SavingsVolThinProvisioning}
            "search_name" = ${SearchName}
            "snap_count" = ${SnapCount}
            "snapcoll_count" = ${SnapcollCount}
            "type" = ${Type}
            "unassigned_array_list" = ${UnassignedArrayList}
            "unused_reserve" = ${UnusedReserve}
            "usage" = ${Usage}
            "usage_valid" = ${UsageValid}
            "vol_count" = ${VolCount}
            "vol_list" = ${VolList}
            "vol_thin_provisioning_ratio" = ${VolThinProvisioningRatio}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimblePoolsListItemsInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimblePoolsListItemsInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimblePoolsListItemsInner<PSCustomObject>
#>
function ConvertFrom-JsonToNimblePoolsListItemsInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimblePoolsListItemsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimblePoolsListItemsInner
        $AllProperties = ("id", "name", "all_flash", "array_count", "array_list", "associated_links", "cache_capacity", "capacity", "clone_ratio", "compression_ratio", "consoleUri", "creation_time", "customerId", "data_reduction_ratio", "dedupe_all_volumes", "dedupe_capable", "dedupe_capacity_bytes", "dedupe_ratio", "dedupe_usage_bytes", "description", "folder_list", "free_space", "full_name", "generation", "is_default", "last_modified", "pinnable_cache_capacity", "pinned_cache_capacity", "pinned_vol_list", "resourceUri", "savings", "savings_clone", "savings_compression", "savings_data_reduction", "savings_dedupe", "savings_ratio", "savings_vol_thin_provisioning", "search_name", "snap_count", "snapcoll_count", "type", "unassigned_array_list", "unused_reserve", "usage", "usage_valid", "vol_count", "vol_list", "vol_thin_provisioning_ratio")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "all_flash"))) { #optional property not found
            $AllFlash = $null
        } else {
            $AllFlash = $JsonParameters.PSobject.Properties["all_flash"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "array_count"))) { #optional property not found
            $ArrayCount = $null
        } else {
            $ArrayCount = $JsonParameters.PSobject.Properties["array_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "array_list"))) { #optional property not found
            $ArrayList = $null
        } else {
            $ArrayList = $JsonParameters.PSobject.Properties["array_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "associated_links"))) { #optional property not found
            $AssociatedLinks = $null
        } else {
            $AssociatedLinks = $JsonParameters.PSobject.Properties["associated_links"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cache_capacity"))) { #optional property not found
            $CacheCapacity = $null
        } else {
            $CacheCapacity = $JsonParameters.PSobject.Properties["cache_capacity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "capacity"))) { #optional property not found
            $Capacity = $null
        } else {
            $Capacity = $JsonParameters.PSobject.Properties["capacity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "clone_ratio"))) { #optional property not found
            $CloneRatio = $null
        } else {
            $CloneRatio = $JsonParameters.PSobject.Properties["clone_ratio"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "compression_ratio"))) { #optional property not found
            $CompressionRatio = $null
        } else {
            $CompressionRatio = $JsonParameters.PSobject.Properties["compression_ratio"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "consoleUri"))) { #optional property not found
            $ConsoleUri = $null
        } else {
            $ConsoleUri = $JsonParameters.PSobject.Properties["consoleUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creation_time"))) { #optional property not found
            $CreationTime = $null
        } else {
            $CreationTime = $JsonParameters.PSobject.Properties["creation_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerId"))) { #optional property not found
            $CustomerId = $null
        } else {
            $CustomerId = $JsonParameters.PSobject.Properties["customerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "data_reduction_ratio"))) { #optional property not found
            $DataReductionRatio = $null
        } else {
            $DataReductionRatio = $JsonParameters.PSobject.Properties["data_reduction_ratio"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dedupe_all_volumes"))) { #optional property not found
            $DedupeAllVolumes = $null
        } else {
            $DedupeAllVolumes = $JsonParameters.PSobject.Properties["dedupe_all_volumes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dedupe_capable"))) { #optional property not found
            $DedupeCapable = $null
        } else {
            $DedupeCapable = $JsonParameters.PSobject.Properties["dedupe_capable"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dedupe_capacity_bytes"))) { #optional property not found
            $DedupeCapacityBytes = $null
        } else {
            $DedupeCapacityBytes = $JsonParameters.PSobject.Properties["dedupe_capacity_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dedupe_ratio"))) { #optional property not found
            $DedupeRatio = $null
        } else {
            $DedupeRatio = $JsonParameters.PSobject.Properties["dedupe_ratio"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dedupe_usage_bytes"))) { #optional property not found
            $DedupeUsageBytes = $null
        } else {
            $DedupeUsageBytes = $JsonParameters.PSobject.Properties["dedupe_usage_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "folder_list"))) { #optional property not found
            $FolderList = $null
        } else {
            $FolderList = $JsonParameters.PSobject.Properties["folder_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "free_space"))) { #optional property not found
            $FreeSpace = $null
        } else {
            $FreeSpace = $JsonParameters.PSobject.Properties["free_space"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "full_name"))) { #optional property not found
            $FullName = $null
        } else {
            $FullName = $JsonParameters.PSobject.Properties["full_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "generation"))) { #optional property not found
            $Generation = $null
        } else {
            $Generation = $JsonParameters.PSobject.Properties["generation"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_default"))) { #optional property not found
            $IsDefault = $null
        } else {
            $IsDefault = $JsonParameters.PSobject.Properties["is_default"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_modified"))) { #optional property not found
            $LastModified = $null
        } else {
            $LastModified = $JsonParameters.PSobject.Properties["last_modified"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pinnable_cache_capacity"))) { #optional property not found
            $PinnableCacheCapacity = $null
        } else {
            $PinnableCacheCapacity = $JsonParameters.PSobject.Properties["pinnable_cache_capacity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pinned_cache_capacity"))) { #optional property not found
            $PinnedCacheCapacity = $null
        } else {
            $PinnedCacheCapacity = $JsonParameters.PSobject.Properties["pinned_cache_capacity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pinned_vol_list"))) { #optional property not found
            $PinnedVolList = $null
        } else {
            $PinnedVolList = $JsonParameters.PSobject.Properties["pinned_vol_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "resourceUri"))) { #optional property not found
            $ResourceUri = $null
        } else {
            $ResourceUri = $JsonParameters.PSobject.Properties["resourceUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "savings"))) { #optional property not found
            $Savings = $null
        } else {
            $Savings = $JsonParameters.PSobject.Properties["savings"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "savings_clone"))) { #optional property not found
            $SavingsClone = $null
        } else {
            $SavingsClone = $JsonParameters.PSobject.Properties["savings_clone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "savings_compression"))) { #optional property not found
            $SavingsCompression = $null
        } else {
            $SavingsCompression = $JsonParameters.PSobject.Properties["savings_compression"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "savings_data_reduction"))) { #optional property not found
            $SavingsDataReduction = $null
        } else {
            $SavingsDataReduction = $JsonParameters.PSobject.Properties["savings_data_reduction"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "savings_dedupe"))) { #optional property not found
            $SavingsDedupe = $null
        } else {
            $SavingsDedupe = $JsonParameters.PSobject.Properties["savings_dedupe"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "savings_ratio"))) { #optional property not found
            $SavingsRatio = $null
        } else {
            $SavingsRatio = $JsonParameters.PSobject.Properties["savings_ratio"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "savings_vol_thin_provisioning"))) { #optional property not found
            $SavingsVolThinProvisioning = $null
        } else {
            $SavingsVolThinProvisioning = $JsonParameters.PSobject.Properties["savings_vol_thin_provisioning"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "search_name"))) { #optional property not found
            $SearchName = $null
        } else {
            $SearchName = $JsonParameters.PSobject.Properties["search_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snap_count"))) { #optional property not found
            $SnapCount = $null
        } else {
            $SnapCount = $JsonParameters.PSobject.Properties["snap_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snapcoll_count"))) { #optional property not found
            $SnapcollCount = $null
        } else {
            $SnapcollCount = $JsonParameters.PSobject.Properties["snapcoll_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "unassigned_array_list"))) { #optional property not found
            $UnassignedArrayList = $null
        } else {
            $UnassignedArrayList = $JsonParameters.PSobject.Properties["unassigned_array_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "unused_reserve"))) { #optional property not found
            $UnusedReserve = $null
        } else {
            $UnusedReserve = $JsonParameters.PSobject.Properties["unused_reserve"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "usage"))) { #optional property not found
            $Usage = $null
        } else {
            $Usage = $JsonParameters.PSobject.Properties["usage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "usage_valid"))) { #optional property not found
            $UsageValid = $null
        } else {
            $UsageValid = $JsonParameters.PSobject.Properties["usage_valid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vol_count"))) { #optional property not found
            $VolCount = $null
        } else {
            $VolCount = $JsonParameters.PSobject.Properties["vol_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vol_list"))) { #optional property not found
            $VolList = $null
        } else {
            $VolList = $JsonParameters.PSobject.Properties["vol_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vol_thin_provisioning_ratio"))) { #optional property not found
            $VolThinProvisioningRatio = $null
        } else {
            $VolThinProvisioningRatio = $JsonParameters.PSobject.Properties["vol_thin_provisioning_ratio"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "all_flash" = ${AllFlash}
            "array_count" = ${ArrayCount}
            "array_list" = ${ArrayList}
            "associated_links" = ${AssociatedLinks}
            "cache_capacity" = ${CacheCapacity}
            "capacity" = ${Capacity}
            "clone_ratio" = ${CloneRatio}
            "compression_ratio" = ${CompressionRatio}
            "consoleUri" = ${ConsoleUri}
            "creation_time" = ${CreationTime}
            "customerId" = ${CustomerId}
            "data_reduction_ratio" = ${DataReductionRatio}
            "dedupe_all_volumes" = ${DedupeAllVolumes}
            "dedupe_capable" = ${DedupeCapable}
            "dedupe_capacity_bytes" = ${DedupeCapacityBytes}
            "dedupe_ratio" = ${DedupeRatio}
            "dedupe_usage_bytes" = ${DedupeUsageBytes}
            "description" = ${Description}
            "folder_list" = ${FolderList}
            "free_space" = ${FreeSpace}
            "full_name" = ${FullName}
            "generation" = ${Generation}
            "is_default" = ${IsDefault}
            "last_modified" = ${LastModified}
            "pinnable_cache_capacity" = ${PinnableCacheCapacity}
            "pinned_cache_capacity" = ${PinnedCacheCapacity}
            "pinned_vol_list" = ${PinnedVolList}
            "resourceUri" = ${ResourceUri}
            "savings" = ${Savings}
            "savings_clone" = ${SavingsClone}
            "savings_compression" = ${SavingsCompression}
            "savings_data_reduction" = ${SavingsDataReduction}
            "savings_dedupe" = ${SavingsDedupe}
            "savings_ratio" = ${SavingsRatio}
            "savings_vol_thin_provisioning" = ${SavingsVolThinProvisioning}
            "search_name" = ${SearchName}
            "snap_count" = ${SnapCount}
            "snapcoll_count" = ${SnapcollCount}
            "type" = ${Type}
            "unassigned_array_list" = ${UnassignedArrayList}
            "unused_reserve" = ${UnusedReserve}
            "usage" = ${Usage}
            "usage_valid" = ${UsageValid}
            "vol_count" = ${VolCount}
            "vol_list" = ${VolList}
            "vol_thin_provisioning_ratio" = ${VolThinProvisioningRatio}
        }

        return $PSO
    }

}

