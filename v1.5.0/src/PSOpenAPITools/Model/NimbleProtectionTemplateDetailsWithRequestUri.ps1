#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER RequestUri
requestUri for detailed protection-templates object
.PARAMETER AgentHostname
Generic Backup agent hostname. Custom port number can be specified with agent hostname using \\"":\\"".
.PARAMETER AppClusterName
If the application is running within a Windows cluster environment then this is the cluster name.
.PARAMETER AppId
Application ID running on the server. Application ID can only be specified if application synchronization is VSS.  Possible values:'exchange_dag', 'sql2012', 'sql2014', 'inval', 'sql2005', 'sql2016', 'exchange', 'sql2017', 'sql2018', 'hyperv'.
.PARAMETER AppServer
Application server hostname.
.PARAMETER AppServiceName
If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment.
.PARAMETER AppSync
Application synchronization ({none|vss|vmware|generic}). Possible values:'vss', 'vmware', 'none', 'generic'.
.PARAMETER CreationTime
Time when this protection template was created.
.PARAMETER Id
Identifier for protection template.
.PARAMETER LastModified
Time when this protection template was last modified.
.PARAMETER Name
Fully qualified name of protection template.
.PARAMETER VcenterHostname
VMware vCenter hostname. Custom port number can be specified with vCenter hostname.
.PARAMETER AgentUsername
Generic Backup agent username.
.PARAMETER AssociatedLinks
Associated Links Details
.PARAMETER ConsoleUri
consoleUri for detailed storage object
.PARAMETER CustomerId
customerId
.PARAMETER Description
Text description of protection template.
.PARAMETER FullName
Fully qualified name of protection template.
.PARAMETER Generation
generation
.PARAMETER ReplPriority
Replication priority for the protection template with the following choices: {normal | high}. Possible values:'normal', 'high'.
.PARAMETER ResourceUri
Link to the object URI
.PARAMETER ScheduleList
List of schedules for this protection policy.
.PARAMETER SearchName
Name of protection template used for object search.
.PARAMETER Type
type
.PARAMETER VcenterUsername
VMware vCenter username.
.OUTPUTS

NimbleProtectionTemplateDetailsWithRequestUri<PSCustomObject>
#>

function Initialize-NimbleProtectionTemplateDetailsWithRequestUri {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RequestUri},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AgentHostname},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppClusterName},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppServer},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppServiceName},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppSync},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CreationTime},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LastModified},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VcenterHostname},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AgentUsername},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${AssociatedLinks},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConsoleUri},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerId},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FullName},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Generation},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReplPriority},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ResourceUri},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ScheduleList},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SearchName},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Type},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VcenterUsername}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleProtectionTemplateDetailsWithRequestUri' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "requestUri" = ${RequestUri}
            "agent_hostname" = ${AgentHostname}
            "app_cluster_name" = ${AppClusterName}
            "app_id" = ${AppId}
            "app_server" = ${AppServer}
            "app_service_name" = ${AppServiceName}
            "app_sync" = ${AppSync}
            "creation_time" = ${CreationTime}
            "id" = ${Id}
            "last_modified" = ${LastModified}
            "name" = ${Name}
            "vcenter_hostname" = ${VcenterHostname}
            "agent_username" = ${AgentUsername}
            "associated_links" = ${AssociatedLinks}
            "consoleUri" = ${ConsoleUri}
            "customerId" = ${CustomerId}
            "description" = ${Description}
            "full_name" = ${FullName}
            "generation" = ${Generation}
            "repl_priority" = ${ReplPriority}
            "resourceUri" = ${ResourceUri}
            "schedule_list" = ${ScheduleList}
            "search_name" = ${SearchName}
            "type" = ${Type}
            "vcenter_username" = ${VcenterUsername}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleProtectionTemplateDetailsWithRequestUri<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleProtectionTemplateDetailsWithRequestUri<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleProtectionTemplateDetailsWithRequestUri<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleProtectionTemplateDetailsWithRequestUri {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleProtectionTemplateDetailsWithRequestUri' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleProtectionTemplateDetailsWithRequestUri
        $AllProperties = ("requestUri", "agent_hostname", "app_cluster_name", "app_id", "app_server", "app_service_name", "app_sync", "creation_time", "id", "last_modified", "name", "vcenter_hostname", "agent_username", "associated_links", "consoleUri", "customerId", "description", "full_name", "generation", "repl_priority", "resourceUri", "schedule_list", "search_name", "type", "vcenter_username")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "requestUri"))) { #optional property not found
            $RequestUri = $null
        } else {
            $RequestUri = $JsonParameters.PSobject.Properties["requestUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "agent_hostname"))) { #optional property not found
            $AgentHostname = $null
        } else {
            $AgentHostname = $JsonParameters.PSobject.Properties["agent_hostname"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "app_cluster_name"))) { #optional property not found
            $AppClusterName = $null
        } else {
            $AppClusterName = $JsonParameters.PSobject.Properties["app_cluster_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "app_id"))) { #optional property not found
            $AppId = $null
        } else {
            $AppId = $JsonParameters.PSobject.Properties["app_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "app_server"))) { #optional property not found
            $AppServer = $null
        } else {
            $AppServer = $JsonParameters.PSobject.Properties["app_server"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "app_service_name"))) { #optional property not found
            $AppServiceName = $null
        } else {
            $AppServiceName = $JsonParameters.PSobject.Properties["app_service_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "app_sync"))) { #optional property not found
            $AppSync = $null
        } else {
            $AppSync = $JsonParameters.PSobject.Properties["app_sync"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creation_time"))) { #optional property not found
            $CreationTime = $null
        } else {
            $CreationTime = $JsonParameters.PSobject.Properties["creation_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_modified"))) { #optional property not found
            $LastModified = $null
        } else {
            $LastModified = $JsonParameters.PSobject.Properties["last_modified"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vcenter_hostname"))) { #optional property not found
            $VcenterHostname = $null
        } else {
            $VcenterHostname = $JsonParameters.PSobject.Properties["vcenter_hostname"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "agent_username"))) { #optional property not found
            $AgentUsername = $null
        } else {
            $AgentUsername = $JsonParameters.PSobject.Properties["agent_username"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "associated_links"))) { #optional property not found
            $AssociatedLinks = $null
        } else {
            $AssociatedLinks = $JsonParameters.PSobject.Properties["associated_links"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "consoleUri"))) { #optional property not found
            $ConsoleUri = $null
        } else {
            $ConsoleUri = $JsonParameters.PSobject.Properties["consoleUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerId"))) { #optional property not found
            $CustomerId = $null
        } else {
            $CustomerId = $JsonParameters.PSobject.Properties["customerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "full_name"))) { #optional property not found
            $FullName = $null
        } else {
            $FullName = $JsonParameters.PSobject.Properties["full_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "generation"))) { #optional property not found
            $Generation = $null
        } else {
            $Generation = $JsonParameters.PSobject.Properties["generation"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "repl_priority"))) { #optional property not found
            $ReplPriority = $null
        } else {
            $ReplPriority = $JsonParameters.PSobject.Properties["repl_priority"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "resourceUri"))) { #optional property not found
            $ResourceUri = $null
        } else {
            $ResourceUri = $JsonParameters.PSobject.Properties["resourceUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "schedule_list"))) { #optional property not found
            $ScheduleList = $null
        } else {
            $ScheduleList = $JsonParameters.PSobject.Properties["schedule_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "search_name"))) { #optional property not found
            $SearchName = $null
        } else {
            $SearchName = $JsonParameters.PSobject.Properties["search_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vcenter_username"))) { #optional property not found
            $VcenterUsername = $null
        } else {
            $VcenterUsername = $JsonParameters.PSobject.Properties["vcenter_username"].value
        }

        $PSO = [PSCustomObject]@{
            "requestUri" = ${RequestUri}
            "agent_hostname" = ${AgentHostname}
            "app_cluster_name" = ${AppClusterName}
            "app_id" = ${AppId}
            "app_server" = ${AppServer}
            "app_service_name" = ${AppServiceName}
            "app_sync" = ${AppSync}
            "creation_time" = ${CreationTime}
            "id" = ${Id}
            "last_modified" = ${LastModified}
            "name" = ${Name}
            "vcenter_hostname" = ${VcenterHostname}
            "agent_username" = ${AgentUsername}
            "associated_links" = ${AssociatedLinks}
            "consoleUri" = ${ConsoleUri}
            "customerId" = ${CustomerId}
            "description" = ${Description}
            "full_name" = ${FullName}
            "generation" = ${Generation}
            "repl_priority" = ${ReplPriority}
            "resourceUri" = ${ResourceUri}
            "schedule_list" = ${ScheduleList}
            "search_name" = ${SearchName}
            "type" = ${Type}
            "vcenter_username" = ${VcenterUsername}
        }

        return $PSO
    }

}

