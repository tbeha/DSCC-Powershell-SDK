#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER NoSnapshot
Specifies that snapshots are not taken of application sets that are switched from secondary to primary. Additionally, existing snapshots are deleted if application sets are switched from primary to secondary. The use of this option may result in a full synchronization of the secondary volumes.
.PARAMETER SkipStart
Specifies that protection is not started after restore action is completed.
.PARAMETER SkipSync
Specifies that protection is not synced after restore action is completed.
.PARAMETER TargetName
Replication partner name (target name) on which the restore action to be performed.
.OUTPUTS

ArcusRestoreParams<PSCustomObject>
#>

function Initialize-ArcusRestoreParams {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${NoSnapshot},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${SkipStart},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${SkipSync},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TargetName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusRestoreParams' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "noSnapshot" = ${NoSnapshot}
            "skipStart" = ${SkipStart}
            "skipSync" = ${SkipSync}
            "targetName" = ${TargetName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusRestoreParams<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusRestoreParams<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusRestoreParams<PSCustomObject>
#>
function ConvertFrom-JsonToArcusRestoreParams {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusRestoreParams' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusRestoreParams
        $AllProperties = ("noSnapshot", "skipStart", "skipSync", "targetName")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "noSnapshot"))) { #optional property not found
            $NoSnapshot = $null
        } else {
            $NoSnapshot = $JsonParameters.PSobject.Properties["noSnapshot"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "skipStart"))) { #optional property not found
            $SkipStart = $null
        } else {
            $SkipStart = $JsonParameters.PSobject.Properties["skipStart"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "skipSync"))) { #optional property not found
            $SkipSync = $null
        } else {
            $SkipSync = $JsonParameters.PSobject.Properties["skipSync"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "targetName"))) { #optional property not found
            $TargetName = $null
        } else {
            $TargetName = $JsonParameters.PSobject.Properties["targetName"].value
        }

        $PSO = [PSCustomObject]@{
            "noSnapshot" = ${NoSnapshot}
            "skipStart" = ${SkipStart}
            "skipSync" = ${SkipSync}
            "targetName" = ${TargetName}
        }

        return $PSO
    }

}

