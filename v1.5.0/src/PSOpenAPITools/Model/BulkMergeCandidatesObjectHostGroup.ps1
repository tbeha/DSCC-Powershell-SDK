#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER DuplicateIds
host group ids of all avialable duplicates
.PARAMETER Id
Identifier for duplicate host group.
.PARAMETER Members
Host names of all hosts associated to the host group
.PARAMETER Name
Name of the host group.
.PARAMETER Systems
system IDs to which the host group belongs to.
.OUTPUTS

BulkMergeCandidatesObjectHostGroup<PSCustomObject>
#>

function Initialize-BulkMergeCandidatesObjectHostGroup {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${DuplicateIds},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Members},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Systems}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => BulkMergeCandidatesObjectHostGroup' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "duplicateIds" = ${DuplicateIds}
            "id" = ${Id}
            "members" = ${Members}
            "name" = ${Name}
            "systems" = ${Systems}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BulkMergeCandidatesObjectHostGroup<PSCustomObject>

.DESCRIPTION

Convert from JSON to BulkMergeCandidatesObjectHostGroup<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BulkMergeCandidatesObjectHostGroup<PSCustomObject>
#>
function ConvertFrom-JsonToBulkMergeCandidatesObjectHostGroup {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => BulkMergeCandidatesObjectHostGroup' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BulkMergeCandidatesObjectHostGroup
        $AllProperties = ("duplicateIds", "id", "members", "name", "systems")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "duplicateIds"))) { #optional property not found
            $DuplicateIds = $null
        } else {
            $DuplicateIds = $JsonParameters.PSobject.Properties["duplicateIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "members"))) { #optional property not found
            $Members = $null
        } else {
            $Members = $JsonParameters.PSobject.Properties["members"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "systems"))) { #optional property not found
            $Systems = $null
        } else {
            $Systems = $JsonParameters.PSobject.Properties["systems"].value
        }

        $PSO = [PSCustomObject]@{
            "duplicateIds" = ${DuplicateIds}
            "id" = ${Id}
            "members" = ${Members}
            "name" = ${Name}
            "systems" = ${Systems}
        }

        return $PSO
    }

}

