#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER GatewayAddress
Gateway address for the NVMe port. If you are configuring VLAN then this is the VLAN Gateway for this port. If you want to clear or don't want to set the gateway address, then the gateway address should be 0.0.0.0
.PARAMETER IpAddress
IP address for the NVMe port. If you are configuring VLAN then this is the VLAN IP address for this port.
.PARAMETER Mtu
Maximum transmission unit (MTU) size
.PARAMETER PrefixLength
Prefix length of the NVMe port
.PARAMETER VlanID
VLAN id for the NVMe port. Value ranges between 1 to 4096
.OUTPUTS

ArcusportNVMeEditVlansInner<PSCustomObject>
#>

function Initialize-ArcusportNVMeEditVlansInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GatewayAddress},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IpAddress},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Mtu},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PrefixLength},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VlanID}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusportNVMeEditVlansInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "gatewayAddress" = ${GatewayAddress}
            "ipAddress" = ${IpAddress}
            "mtu" = ${Mtu}
            "prefixLength" = ${PrefixLength}
            "vlanID" = ${VlanID}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusportNVMeEditVlansInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusportNVMeEditVlansInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusportNVMeEditVlansInner<PSCustomObject>
#>
function ConvertFrom-JsonToArcusportNVMeEditVlansInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusportNVMeEditVlansInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusportNVMeEditVlansInner
        $AllProperties = ("gatewayAddress", "ipAddress", "mtu", "prefixLength", "vlanID")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gatewayAddress"))) { #optional property not found
            $GatewayAddress = $null
        } else {
            $GatewayAddress = $JsonParameters.PSobject.Properties["gatewayAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ipAddress"))) { #optional property not found
            $IpAddress = $null
        } else {
            $IpAddress = $JsonParameters.PSobject.Properties["ipAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mtu"))) { #optional property not found
            $Mtu = $null
        } else {
            $Mtu = $JsonParameters.PSobject.Properties["mtu"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "prefixLength"))) { #optional property not found
            $PrefixLength = $null
        } else {
            $PrefixLength = $JsonParameters.PSobject.Properties["prefixLength"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vlanID"))) { #optional property not found
            $VlanID = $null
        } else {
            $VlanID = $JsonParameters.PSobject.Properties["vlanID"].value
        }

        $PSO = [PSCustomObject]@{
            "gatewayAddress" = ${GatewayAddress}
            "ipAddress" = ${IpAddress}
            "mtu" = ${Mtu}
            "prefixLength" = ${PrefixLength}
            "vlanID" = ${VlanID}
        }

        return $PSO
    }

}

