#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Timestamp based latency values

.PARAMETER CpuBusy
CPU busy percentage
.PARAMETER DackSsd
Delayed ack percentage
.PARAMETER PdSsdAvgBusy
PD average busy percentage
.PARAMETER ReadCacheMiss
Read cache miss percentage
.PARAMETER Timestamp
Timestamp
.PARAMETER WriteCacheMiss
Write cache miss percentage
.OUTPUTS

ArcusFactorData<PSCustomObject>
#>

function Initialize-ArcusFactorData {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${CpuBusy},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${DackSsd},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${PdSsdAvgBusy},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${ReadCacheMiss},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Timestamp},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${WriteCacheMiss}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusFactorData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "cpuBusy" = ${CpuBusy}
            "dackSsd" = ${DackSsd}
            "pdSsdAvgBusy" = ${PdSsdAvgBusy}
            "readCacheMiss" = ${ReadCacheMiss}
            "timestamp" = ${Timestamp}
            "writeCacheMiss" = ${WriteCacheMiss}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusFactorData<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusFactorData<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusFactorData<PSCustomObject>
#>
function ConvertFrom-JsonToArcusFactorData {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusFactorData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusFactorData
        $AllProperties = ("cpuBusy", "dackSsd", "pdSsdAvgBusy", "readCacheMiss", "timestamp", "writeCacheMiss")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cpuBusy"))) { #optional property not found
            $CpuBusy = $null
        } else {
            $CpuBusy = $JsonParameters.PSobject.Properties["cpuBusy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dackSsd"))) { #optional property not found
            $DackSsd = $null
        } else {
            $DackSsd = $JsonParameters.PSobject.Properties["dackSsd"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pdSsdAvgBusy"))) { #optional property not found
            $PdSsdAvgBusy = $null
        } else {
            $PdSsdAvgBusy = $JsonParameters.PSobject.Properties["pdSsdAvgBusy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "readCacheMiss"))) { #optional property not found
            $ReadCacheMiss = $null
        } else {
            $ReadCacheMiss = $JsonParameters.PSobject.Properties["readCacheMiss"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "writeCacheMiss"))) { #optional property not found
            $WriteCacheMiss = $null
        } else {
            $WriteCacheMiss = $JsonParameters.PSobject.Properties["writeCacheMiss"].value
        }

        $PSO = [PSCustomObject]@{
            "cpuBusy" = ${CpuBusy}
            "dackSsd" = ${DackSsd}
            "pdSsdAvgBusy" = ${PdSsdAvgBusy}
            "readCacheMiss" = ${ReadCacheMiss}
            "timestamp" = ${Timestamp}
            "writeCacheMiss" = ${WriteCacheMiss}
        }

        return $PSO
    }

}

