#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER NoSnapshot
This option turns off creation of snapshots in synchronous and periodic modes, and deletes the current synchronization snapshots.
.PARAMETER TargetName
Target name on which the protection has to be stopped.
.OUTPUTS

StopParams<PSCustomObject>
#>

function Initialize-StopParams {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${NoSnapshot},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TargetName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => StopParams' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "noSnapshot" = ${NoSnapshot}
            "targetName" = ${TargetName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to StopParams<PSCustomObject>

.DESCRIPTION

Convert from JSON to StopParams<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

StopParams<PSCustomObject>
#>
function ConvertFrom-JsonToStopParams {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => StopParams' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in StopParams
        $AllProperties = ("noSnapshot", "targetName")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "noSnapshot"))) { #optional property not found
            $NoSnapshot = $null
        } else {
            $NoSnapshot = $JsonParameters.PSobject.Properties["noSnapshot"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "targetName"))) { #optional property not found
            $TargetName = $null
        } else {
            $TargetName = $JsonParameters.PSobject.Properties["targetName"].value
        }

        $PSO = [PSCustomObject]@{
            "noSnapshot" = ${NoSnapshot}
            "targetName" = ${TargetName}
        }

        return $PSO
    }

}

