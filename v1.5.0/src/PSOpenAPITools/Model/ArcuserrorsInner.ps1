#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.5.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AlarmCode
Alarm code
.PARAMETER AlarmText
No description available.
.PARAMETER Iom
No description available.
.OUTPUTS

ArcuserrorsInner<PSCustomObject>
#>

function Initialize-ArcuserrorsInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AlarmCode},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AlarmText},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Iom}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcuserrorsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "alarmCode" = ${AlarmCode}
            "alarmText" = ${AlarmText}
            "iom" = ${Iom}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcuserrorsInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcuserrorsInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcuserrorsInner<PSCustomObject>
#>
function ConvertFrom-JsonToArcuserrorsInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcuserrorsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcuserrorsInner
        $AllProperties = ("alarmCode", "alarmText", "iom")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "alarmCode"))) { #optional property not found
            $AlarmCode = $null
        } else {
            $AlarmCode = $JsonParameters.PSobject.Properties["alarmCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "alarmText"))) { #optional property not found
            $AlarmText = $null
        } else {
            $AlarmText = $JsonParameters.PSobject.Properties["alarmText"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "iom"))) { #optional property not found
            $Iom = $null
        } else {
            $Iom = $JsonParameters.PSobject.Properties["iom"].value
        }

        $PSO = [PSCustomObject]@{
            "alarmCode" = ${AlarmCode}
            "alarmText" = ${AlarmText}
            "iom" = ${Iom}
        }

        return $PSO
    }

}

