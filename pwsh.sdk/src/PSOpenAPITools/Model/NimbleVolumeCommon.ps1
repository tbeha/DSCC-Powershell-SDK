#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AccessControlRecords
List of access control records that apply to this volume. List of access control records associated with a volume or snapshot or protocol endpoint.
.PARAMETER AgentType
External management agent type. Possible values: 'none', 'smis', 'vvol', 'openstack', 'openstackv2'.
.PARAMETER AppCategory
Application category that the volume belongs to. Plain string.
.PARAMETER AppUuid
Application identifier of volume. String of up to 255 alphanumeric characters, hyphen, colon, dot and underscore are allowed.
.PARAMETER AssociatedLinks
Associated Links Details
.PARAMETER BlockSize
Size in bytes of blocks in the volume.
.PARAMETER CacheNeededForPin
The amount of flash needed to pin the volume.
.PARAMETER CachePinned
If set to true, all the contents of this volume are kept in flash cache. This provides for consistent performance guarantees for all types of workloads. The amount of flash needed to pin the volume is equal to the limit for the volume.
.PARAMETER CachePolicy
Cache policy applied to the volume. Possible values: 'disabled', 'normal', 'aggressive', 'no_write', 'aggressive_read_no_write'.
.PARAMETER CachingEnabled
Indicate caching the volume is enabled.
.PARAMETER CksumLastVerified
Last checksum verification time.
.PARAMETER ConsoleUri
consoleUri for detailed storage object
.PARAMETER ContentReplErrorsFound
Indicates whether the last content based replication had errors.
.PARAMETER CreationTime
Time when this volume was created. Seconds since last epoch i.e. 00:00 January 1, 1970.
.PARAMETER CustomerId
customerId
.PARAMETER DedupeEnabled
Indicate whether dedupe is enabled.
.PARAMETER Description
Text description of volume. String of up to 255 printable ASCII characters.
.PARAMETER EncryptionCipher
The encryption cipher of the volume. Possible values: 'none', 'aes_256_xts'.
.PARAMETER Force
Forcibly offline, reduce size or change read-only status a volume.
.PARAMETER FullName
Fully qualified name of volume. String of up to 215 alphanumeric, hyphenated, colon, or period-separated characters; but cannot begin with hyphen, colon or period.
.PARAMETER Generation
generation
.PARAMETER InheritAcl
In a volume clone operation, if both the parent and the clone have no external management agent (their agent_type property is ""none""), then inherit_acl controls whether the clone will inherit a copy of the parent's access control list. If either the parent or the clone have an external management agent, then the clone will not inherit the parent's access control list.
.PARAMETER IsMfaProtected
Protected by multi-factor authentication. Possible values: 'true', 'false'.
.PARAMETER IscsiTargetScope
This indicates whether volume is exported under iSCSI Group Target or iSCSI Volume Target. This attribute is only meaningful to iSCSI system. On FC system, all volumes are exported under the FC Group Target. In create operation, the volume's target type will be set by this attribute. If not specified, it will be set as the group-setting. In clone operation, the clone's target type will inherit from the parent' setting. Possible values: 'volume', 'group'.
.PARAMETER LastContentSnapBrCgUid
The branch cg uid of the content based snapshot that was last replicated.
.PARAMETER LastContentSnapBrGid
The branch gid of the content based snapshot that was last replicated.
.PARAMETER LastContentSnapId
The ID of the content based snapshot that was last replicated.
.PARAMETER LastModified
Time when this volume was last modified. Seconds since last epoch i.e. 00:00 January 1, 1970.
.PARAMETER LastSnap
No description available.
.PARAMETER Limit
Limit for the volume as a percentage of volume size. Percentage as integer from 0 to 100.
.PARAMETER LimitIops
IOPS limit for this volume. If limit_iops is not specified when a volume is created, or if limit_iops is set to -1, then the volume has no IOPS limit. If limit_iops is not specified while creating a clone, IOPS limit of parent volume will be used as limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B).
.PARAMETER LimitMbps
Throughput limit for this volume in MB/s. If limit_mbps is not specified when a volume is created, or if limit_mbps is set to -1, then the volume has no MBPS limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited. If both limit_iops and limit_mbps are specified, limit_mbps must not be hit before limit_iops. In other words, IOPS and MBPS limits should honor limit_iops _ampersand_amp;lt;= ((limit_mbps MB/s * 2^20 B/MB) / block_size B).
.PARAMETER Metadata
Key-value pairs that augment a volume's attributes. List of key-value pairs. Keys must be unique and non-empty. When creating an object, values must be non-empty. When updating an object, an empty value causes the corresponding key to be removed.
.PARAMETER MoveAborting
This indicates whether the move of the volume is aborting or not.
.PARAMETER MoveBytesMigrated
The bytes of volume which have been moved.
.PARAMETER MoveBytesRemaining
The bytes of volume which have not been moved.
.PARAMETER MoveEstComplTime
The estimated time of completion of a move. Seconds since last epoch i.e. 00:00 January 1, 1970.
.PARAMETER MoveStartTime
The Start time when this volume was moved. Seconds since last epoch i.e. 00:00 January 1, 1970.
.PARAMETER MultiInitiator
This indicates whether volume and its snapshots are multi-initiator accessible. This attribute applies only to volumes and snapshots available to iSCSI initiators.Online state of volume, available for host initiators to establish connections.
.PARAMETER NeedsContentRepl
Indicates whether the volume needs content based replication.
.PARAMETER NumSnaps
Number of live, non-hidden snapshots for this volume.
.PARAMETER OfflineReason
Volume offline reason. Possible values: 'user', 'recovery', 'replica', 'over_volume_limit', 'over_snapshot_limit', 'over_volume_reserve', 'over_snapshot_reserve', 'nvram_loss_recovery', 'serial_number_collision', 'encryption_inactive', 'encryption_key_deleted', 'vvol_unbind', 'cache_unpin_in_progress'.
.PARAMETER OnlineSnaps
The list of online snapshots of this volume. Snapshot list as presented in volumes object set.
.PARAMETER PinnedCacheSize
The amount of flash pinned on the volume.
.PARAMETER PreFilter
Pre-filtering criteria. Plain string.
.PARAMETER PreviouslyDeduped
Indicate whether dedupe has ever been enabled on this volume.
.PARAMETER ProjectedNumSnaps
Depricated. Projected number of snapshots (including schedued and manual) for this volume.
.PARAMETER ProtectionType
Specifies if volume is protected with schedules. If protected, indicate whether replication is setup. Volume Collection or volume is protected locally or remotely or unprotected. Possible values: 'local', 'remote' or 'unprotected'.
.PARAMETER Reserve
Amount of space to reserve for this volume as a percentage of volume size. Percentage as integer from 0 to 100.
.PARAMETER ResourceUri
Link to the object URI
.PARAMETER SearchName
Name of volume used for object search. Alphanumeric string, up to 64 characters including hyphen, period, colon.
.PARAMETER SnapReserve
Amount of space to reserve for snapshots of this volume as a percentage of volume size.
.PARAMETER SnapUsageCompressedBytes
Sum of compressed backup data in bytes stored in snapshots of this volume.
.PARAMETER SnapUsagePopulatedBytes
Sum of backup data in bytes stored in snapshots of this volume without accounting for the sharing of data between snapshots.
.PARAMETER SnapUsageUncompressedBytes
Sum of uncompressed unique backup data in bytes stored in snapshots of this volume.
.PARAMETER SnapWarnLevel
Threshold for available space as a percentage of volume size below which an alert is raised.
.PARAMETER SpaceUsageLevel
Indicates space usage level based on warning level. Possible values: 'normal', 'warning', 'critical'.
.PARAMETER SrepLastSync
Time when synchronously replicated volume was last synchronized.
.PARAMETER SrepResyncSync
Percentage of resync progress for synchronously replicated volume.
.PARAMETER ThinlyProvisioned
Allow volume to be advertised as thinly provisioned to initiators supporting thin provisioning. For such volumes, soft limit notification is set to initiators when the volume space usage crosses its volume_warn_level. Default is yes. This change takes effect only for new connections to the volume. Initiators must disconnect and reconnect for the new setting to be take effect at the initiator level consistently.
.PARAMETER TotalUsageBytes
Sum of compressed data and compressed backup data in bytes of this volume.
.PARAMETER Type
type
.PARAMETER UpstreamCachePinned
This indicates whether the upstream volume is cache pinned or not.
.PARAMETER UsageValid
This indicates whether usage information of volume and snapshots are valid or not.
.PARAMETER VolState
Status of the volume.  Possible values: 'online', 'offline', 'non_writable', 'read_only', 'login_only'.
.PARAMETER VolUsageCompressedBytes
Compressed data in bytes for this volume.
.PARAMETER VolUsageUncompressedBytes
Uncompressed data in bytes for this volume.
.PARAMETER VpdIeee0
The first 64 bits of the volume's EUI-64 identifier, encoded as a hexadecimal string. Plain string.
.PARAMETER VpdIeee1
The last 64 bits of the volume's EUI-64 identifier, encoded as a hexadecimal string. Plain string.
.PARAMETER VpdT10
The volume's T10 Vendor ID-based identifier. Plain string.
.PARAMETER WarnLevel
Threshold for available space as a percentage of volume size below which an alert is raised. If this option is not specified, array default volume warn level setting is used to decide the warning level for this volume.
.OUTPUTS

NimbleVolumeCommon<PSCustomObject>
#>

function Initialize-NimbleVolumeCommon {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${AccessControlRecords},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AgentType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppCategory},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppUuid},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${AssociatedLinks},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${BlockSize},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CacheNeededForPin},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CachePinned},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CachePolicy},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CachingEnabled},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CksumLastVerified},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConsoleUri},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${ContentReplErrorsFound},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CreationTime},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerId},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DedupeEnabled},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EncryptionCipher},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Force},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FullName},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Generation},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${InheritAcl},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsMfaProtected},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IscsiTargetScope},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LastContentSnapBrCgUid},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LastContentSnapBrGid},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LastContentSnapId},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LastModified},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${LastSnap},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Limit},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LimitIops},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LimitMbps},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Metadata},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${MoveAborting},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MoveBytesMigrated},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MoveBytesRemaining},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MoveEstComplTime},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MoveStartTime},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${MultiInitiator},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${NeedsContentRepl},
        [Parameter(Position = 40, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${NumSnaps},
        [Parameter(Position = 41, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OfflineReason},
        [Parameter(Position = 42, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${OnlineSnaps},
        [Parameter(Position = 43, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${PinnedCacheSize},
        [Parameter(Position = 44, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PreFilter},
        [Parameter(Position = 45, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${PreviouslyDeduped},
        [Parameter(Position = 46, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ProjectedNumSnaps},
        [Parameter(Position = 47, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProtectionType},
        [Parameter(Position = 48, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Reserve},
        [Parameter(Position = 49, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ResourceUri},
        [Parameter(Position = 50, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SearchName},
        [Parameter(Position = 51, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SnapReserve},
        [Parameter(Position = 52, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SnapUsageCompressedBytes},
        [Parameter(Position = 53, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SnapUsagePopulatedBytes},
        [Parameter(Position = 54, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SnapUsageUncompressedBytes},
        [Parameter(Position = 55, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SnapWarnLevel},
        [Parameter(Position = 56, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SpaceUsageLevel},
        [Parameter(Position = 57, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SrepLastSync},
        [Parameter(Position = 58, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SrepResyncSync},
        [Parameter(Position = 59, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${ThinlyProvisioned},
        [Parameter(Position = 60, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TotalUsageBytes},
        [Parameter(Position = 61, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Type},
        [Parameter(Position = 62, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${UpstreamCachePinned},
        [Parameter(Position = 63, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${UsageValid},
        [Parameter(Position = 64, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VolState},
        [Parameter(Position = 65, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${VolUsageCompressedBytes},
        [Parameter(Position = 66, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${VolUsageUncompressedBytes},
        [Parameter(Position = 67, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VpdIeee0},
        [Parameter(Position = 68, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VpdIeee1},
        [Parameter(Position = 69, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VpdT10},
        [Parameter(Position = 70, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${WarnLevel}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleVolumeCommon' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "access_control_records" = ${AccessControlRecords}
            "agent_type" = ${AgentType}
            "app_category" = ${AppCategory}
            "app_uuid" = ${AppUuid}
            "associated_links" = ${AssociatedLinks}
            "block_size" = ${BlockSize}
            "cache_needed_for_pin" = ${CacheNeededForPin}
            "cache_pinned" = ${CachePinned}
            "cache_policy" = ${CachePolicy}
            "caching_enabled" = ${CachingEnabled}
            "cksum_last_verified" = ${CksumLastVerified}
            "consoleUri" = ${ConsoleUri}
            "content_repl_errors_found" = ${ContentReplErrorsFound}
            "creation_time" = ${CreationTime}
            "customerId" = ${CustomerId}
            "dedupe_enabled" = ${DedupeEnabled}
            "description" = ${Description}
            "encryption_cipher" = ${EncryptionCipher}
            "force" = ${Force}
            "full_name" = ${FullName}
            "generation" = ${Generation}
            "inherit_acl" = ${InheritAcl}
            "is_mfa_protected" = ${IsMfaProtected}
            "iscsi_target_scope" = ${IscsiTargetScope}
            "last_content_snap_br_cg_uid" = ${LastContentSnapBrCgUid}
            "last_content_snap_br_gid" = ${LastContentSnapBrGid}
            "last_content_snap_id" = ${LastContentSnapId}
            "last_modified" = ${LastModified}
            "last_snap" = ${LastSnap}
            "limit" = ${Limit}
            "limit_iops" = ${LimitIops}
            "limit_mbps" = ${LimitMbps}
            "metadata" = ${Metadata}
            "move_aborting" = ${MoveAborting}
            "move_bytes_migrated" = ${MoveBytesMigrated}
            "move_bytes_remaining" = ${MoveBytesRemaining}
            "move_est_compl_time" = ${MoveEstComplTime}
            "move_start_time" = ${MoveStartTime}
            "multi_initiator" = ${MultiInitiator}
            "needs_content_repl" = ${NeedsContentRepl}
            "num_snaps" = ${NumSnaps}
            "offline_reason" = ${OfflineReason}
            "online_snaps" = ${OnlineSnaps}
            "pinned_cache_size" = ${PinnedCacheSize}
            "pre_filter" = ${PreFilter}
            "previously_deduped" = ${PreviouslyDeduped}
            "projected_num_snaps" = ${ProjectedNumSnaps}
            "protection_type" = ${ProtectionType}
            "reserve" = ${Reserve}
            "resourceUri" = ${ResourceUri}
            "search_name" = ${SearchName}
            "snap_reserve" = ${SnapReserve}
            "snap_usage_compressed_bytes" = ${SnapUsageCompressedBytes}
            "snap_usage_populated_bytes" = ${SnapUsagePopulatedBytes}
            "snap_usage_uncompressed_bytes" = ${SnapUsageUncompressedBytes}
            "snap_warn_level" = ${SnapWarnLevel}
            "space_usage_level" = ${SpaceUsageLevel}
            "srep_last_sync" = ${SrepLastSync}
            "srep_resync_sync" = ${SrepResyncSync}
            "thinly_provisioned" = ${ThinlyProvisioned}
            "total_usage_bytes" = ${TotalUsageBytes}
            "type" = ${Type}
            "upstream_cache_pinned" = ${UpstreamCachePinned}
            "usage_valid" = ${UsageValid}
            "vol_state" = ${VolState}
            "vol_usage_compressed_bytes" = ${VolUsageCompressedBytes}
            "vol_usage_uncompressed_bytes" = ${VolUsageUncompressedBytes}
            "vpd_ieee0" = ${VpdIeee0}
            "vpd_ieee1" = ${VpdIeee1}
            "vpd_t10" = ${VpdT10}
            "warn_level" = ${WarnLevel}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleVolumeCommon<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleVolumeCommon<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleVolumeCommon<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleVolumeCommon {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleVolumeCommon' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleVolumeCommon
        $AllProperties = ("access_control_records", "agent_type", "app_category", "app_uuid", "associated_links", "block_size", "cache_needed_for_pin", "cache_pinned", "cache_policy", "caching_enabled", "cksum_last_verified", "consoleUri", "content_repl_errors_found", "creation_time", "customerId", "dedupe_enabled", "description", "encryption_cipher", "force", "full_name", "generation", "inherit_acl", "is_mfa_protected", "iscsi_target_scope", "last_content_snap_br_cg_uid", "last_content_snap_br_gid", "last_content_snap_id", "last_modified", "last_snap", "limit", "limit_iops", "limit_mbps", "metadata", "move_aborting", "move_bytes_migrated", "move_bytes_remaining", "move_est_compl_time", "move_start_time", "multi_initiator", "needs_content_repl", "num_snaps", "offline_reason", "online_snaps", "pinned_cache_size", "pre_filter", "previously_deduped", "projected_num_snaps", "protection_type", "reserve", "resourceUri", "search_name", "snap_reserve", "snap_usage_compressed_bytes", "snap_usage_populated_bytes", "snap_usage_uncompressed_bytes", "snap_warn_level", "space_usage_level", "srep_last_sync", "srep_resync_sync", "thinly_provisioned", "total_usage_bytes", "type", "upstream_cache_pinned", "usage_valid", "vol_state", "vol_usage_compressed_bytes", "vol_usage_uncompressed_bytes", "vpd_ieee0", "vpd_ieee1", "vpd_t10", "warn_level")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "access_control_records"))) { #optional property not found
            $AccessControlRecords = $null
        } else {
            $AccessControlRecords = $JsonParameters.PSobject.Properties["access_control_records"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "agent_type"))) { #optional property not found
            $AgentType = $null
        } else {
            $AgentType = $JsonParameters.PSobject.Properties["agent_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "app_category"))) { #optional property not found
            $AppCategory = $null
        } else {
            $AppCategory = $JsonParameters.PSobject.Properties["app_category"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "app_uuid"))) { #optional property not found
            $AppUuid = $null
        } else {
            $AppUuid = $JsonParameters.PSobject.Properties["app_uuid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "associated_links"))) { #optional property not found
            $AssociatedLinks = $null
        } else {
            $AssociatedLinks = $JsonParameters.PSobject.Properties["associated_links"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "block_size"))) { #optional property not found
            $BlockSize = $null
        } else {
            $BlockSize = $JsonParameters.PSobject.Properties["block_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cache_needed_for_pin"))) { #optional property not found
            $CacheNeededForPin = $null
        } else {
            $CacheNeededForPin = $JsonParameters.PSobject.Properties["cache_needed_for_pin"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cache_pinned"))) { #optional property not found
            $CachePinned = $null
        } else {
            $CachePinned = $JsonParameters.PSobject.Properties["cache_pinned"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cache_policy"))) { #optional property not found
            $CachePolicy = $null
        } else {
            $CachePolicy = $JsonParameters.PSobject.Properties["cache_policy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "caching_enabled"))) { #optional property not found
            $CachingEnabled = $null
        } else {
            $CachingEnabled = $JsonParameters.PSobject.Properties["caching_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cksum_last_verified"))) { #optional property not found
            $CksumLastVerified = $null
        } else {
            $CksumLastVerified = $JsonParameters.PSobject.Properties["cksum_last_verified"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "consoleUri"))) { #optional property not found
            $ConsoleUri = $null
        } else {
            $ConsoleUri = $JsonParameters.PSobject.Properties["consoleUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "content_repl_errors_found"))) { #optional property not found
            $ContentReplErrorsFound = $null
        } else {
            $ContentReplErrorsFound = $JsonParameters.PSobject.Properties["content_repl_errors_found"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creation_time"))) { #optional property not found
            $CreationTime = $null
        } else {
            $CreationTime = $JsonParameters.PSobject.Properties["creation_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerId"))) { #optional property not found
            $CustomerId = $null
        } else {
            $CustomerId = $JsonParameters.PSobject.Properties["customerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dedupe_enabled"))) { #optional property not found
            $DedupeEnabled = $null
        } else {
            $DedupeEnabled = $JsonParameters.PSobject.Properties["dedupe_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "encryption_cipher"))) { #optional property not found
            $EncryptionCipher = $null
        } else {
            $EncryptionCipher = $JsonParameters.PSobject.Properties["encryption_cipher"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "force"))) { #optional property not found
            $Force = $null
        } else {
            $Force = $JsonParameters.PSobject.Properties["force"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "full_name"))) { #optional property not found
            $FullName = $null
        } else {
            $FullName = $JsonParameters.PSobject.Properties["full_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "generation"))) { #optional property not found
            $Generation = $null
        } else {
            $Generation = $JsonParameters.PSobject.Properties["generation"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "inherit_acl"))) { #optional property not found
            $InheritAcl = $null
        } else {
            $InheritAcl = $JsonParameters.PSobject.Properties["inherit_acl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_mfa_protected"))) { #optional property not found
            $IsMfaProtected = $null
        } else {
            $IsMfaProtected = $JsonParameters.PSobject.Properties["is_mfa_protected"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "iscsi_target_scope"))) { #optional property not found
            $IscsiTargetScope = $null
        } else {
            $IscsiTargetScope = $JsonParameters.PSobject.Properties["iscsi_target_scope"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_content_snap_br_cg_uid"))) { #optional property not found
            $LastContentSnapBrCgUid = $null
        } else {
            $LastContentSnapBrCgUid = $JsonParameters.PSobject.Properties["last_content_snap_br_cg_uid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_content_snap_br_gid"))) { #optional property not found
            $LastContentSnapBrGid = $null
        } else {
            $LastContentSnapBrGid = $JsonParameters.PSobject.Properties["last_content_snap_br_gid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_content_snap_id"))) { #optional property not found
            $LastContentSnapId = $null
        } else {
            $LastContentSnapId = $JsonParameters.PSobject.Properties["last_content_snap_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_modified"))) { #optional property not found
            $LastModified = $null
        } else {
            $LastModified = $JsonParameters.PSobject.Properties["last_modified"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_snap"))) { #optional property not found
            $LastSnap = $null
        } else {
            $LastSnap = $JsonParameters.PSobject.Properties["last_snap"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "limit"))) { #optional property not found
            $Limit = $null
        } else {
            $Limit = $JsonParameters.PSobject.Properties["limit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "limit_iops"))) { #optional property not found
            $LimitIops = $null
        } else {
            $LimitIops = $JsonParameters.PSobject.Properties["limit_iops"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "limit_mbps"))) { #optional property not found
            $LimitMbps = $null
        } else {
            $LimitMbps = $JsonParameters.PSobject.Properties["limit_mbps"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "metadata"))) { #optional property not found
            $Metadata = $null
        } else {
            $Metadata = $JsonParameters.PSobject.Properties["metadata"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "move_aborting"))) { #optional property not found
            $MoveAborting = $null
        } else {
            $MoveAborting = $JsonParameters.PSobject.Properties["move_aborting"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "move_bytes_migrated"))) { #optional property not found
            $MoveBytesMigrated = $null
        } else {
            $MoveBytesMigrated = $JsonParameters.PSobject.Properties["move_bytes_migrated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "move_bytes_remaining"))) { #optional property not found
            $MoveBytesRemaining = $null
        } else {
            $MoveBytesRemaining = $JsonParameters.PSobject.Properties["move_bytes_remaining"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "move_est_compl_time"))) { #optional property not found
            $MoveEstComplTime = $null
        } else {
            $MoveEstComplTime = $JsonParameters.PSobject.Properties["move_est_compl_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "move_start_time"))) { #optional property not found
            $MoveStartTime = $null
        } else {
            $MoveStartTime = $JsonParameters.PSobject.Properties["move_start_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "multi_initiator"))) { #optional property not found
            $MultiInitiator = $null
        } else {
            $MultiInitiator = $JsonParameters.PSobject.Properties["multi_initiator"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "needs_content_repl"))) { #optional property not found
            $NeedsContentRepl = $null
        } else {
            $NeedsContentRepl = $JsonParameters.PSobject.Properties["needs_content_repl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "num_snaps"))) { #optional property not found
            $NumSnaps = $null
        } else {
            $NumSnaps = $JsonParameters.PSobject.Properties["num_snaps"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "offline_reason"))) { #optional property not found
            $OfflineReason = $null
        } else {
            $OfflineReason = $JsonParameters.PSobject.Properties["offline_reason"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "online_snaps"))) { #optional property not found
            $OnlineSnaps = $null
        } else {
            $OnlineSnaps = $JsonParameters.PSobject.Properties["online_snaps"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pinned_cache_size"))) { #optional property not found
            $PinnedCacheSize = $null
        } else {
            $PinnedCacheSize = $JsonParameters.PSobject.Properties["pinned_cache_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pre_filter"))) { #optional property not found
            $PreFilter = $null
        } else {
            $PreFilter = $JsonParameters.PSobject.Properties["pre_filter"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "previously_deduped"))) { #optional property not found
            $PreviouslyDeduped = $null
        } else {
            $PreviouslyDeduped = $JsonParameters.PSobject.Properties["previously_deduped"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projected_num_snaps"))) { #optional property not found
            $ProjectedNumSnaps = $null
        } else {
            $ProjectedNumSnaps = $JsonParameters.PSobject.Properties["projected_num_snaps"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "protection_type"))) { #optional property not found
            $ProtectionType = $null
        } else {
            $ProtectionType = $JsonParameters.PSobject.Properties["protection_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reserve"))) { #optional property not found
            $Reserve = $null
        } else {
            $Reserve = $JsonParameters.PSobject.Properties["reserve"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "resourceUri"))) { #optional property not found
            $ResourceUri = $null
        } else {
            $ResourceUri = $JsonParameters.PSobject.Properties["resourceUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "search_name"))) { #optional property not found
            $SearchName = $null
        } else {
            $SearchName = $JsonParameters.PSobject.Properties["search_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snap_reserve"))) { #optional property not found
            $SnapReserve = $null
        } else {
            $SnapReserve = $JsonParameters.PSobject.Properties["snap_reserve"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snap_usage_compressed_bytes"))) { #optional property not found
            $SnapUsageCompressedBytes = $null
        } else {
            $SnapUsageCompressedBytes = $JsonParameters.PSobject.Properties["snap_usage_compressed_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snap_usage_populated_bytes"))) { #optional property not found
            $SnapUsagePopulatedBytes = $null
        } else {
            $SnapUsagePopulatedBytes = $JsonParameters.PSobject.Properties["snap_usage_populated_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snap_usage_uncompressed_bytes"))) { #optional property not found
            $SnapUsageUncompressedBytes = $null
        } else {
            $SnapUsageUncompressedBytes = $JsonParameters.PSobject.Properties["snap_usage_uncompressed_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snap_warn_level"))) { #optional property not found
            $SnapWarnLevel = $null
        } else {
            $SnapWarnLevel = $JsonParameters.PSobject.Properties["snap_warn_level"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "space_usage_level"))) { #optional property not found
            $SpaceUsageLevel = $null
        } else {
            $SpaceUsageLevel = $JsonParameters.PSobject.Properties["space_usage_level"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "srep_last_sync"))) { #optional property not found
            $SrepLastSync = $null
        } else {
            $SrepLastSync = $JsonParameters.PSobject.Properties["srep_last_sync"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "srep_resync_sync"))) { #optional property not found
            $SrepResyncSync = $null
        } else {
            $SrepResyncSync = $JsonParameters.PSobject.Properties["srep_resync_sync"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "thinly_provisioned"))) { #optional property not found
            $ThinlyProvisioned = $null
        } else {
            $ThinlyProvisioned = $JsonParameters.PSobject.Properties["thinly_provisioned"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "total_usage_bytes"))) { #optional property not found
            $TotalUsageBytes = $null
        } else {
            $TotalUsageBytes = $JsonParameters.PSobject.Properties["total_usage_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "upstream_cache_pinned"))) { #optional property not found
            $UpstreamCachePinned = $null
        } else {
            $UpstreamCachePinned = $JsonParameters.PSobject.Properties["upstream_cache_pinned"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "usage_valid"))) { #optional property not found
            $UsageValid = $null
        } else {
            $UsageValid = $JsonParameters.PSobject.Properties["usage_valid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vol_state"))) { #optional property not found
            $VolState = $null
        } else {
            $VolState = $JsonParameters.PSobject.Properties["vol_state"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vol_usage_compressed_bytes"))) { #optional property not found
            $VolUsageCompressedBytes = $null
        } else {
            $VolUsageCompressedBytes = $JsonParameters.PSobject.Properties["vol_usage_compressed_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vol_usage_uncompressed_bytes"))) { #optional property not found
            $VolUsageUncompressedBytes = $null
        } else {
            $VolUsageUncompressedBytes = $JsonParameters.PSobject.Properties["vol_usage_uncompressed_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vpd_ieee0"))) { #optional property not found
            $VpdIeee0 = $null
        } else {
            $VpdIeee0 = $JsonParameters.PSobject.Properties["vpd_ieee0"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vpd_ieee1"))) { #optional property not found
            $VpdIeee1 = $null
        } else {
            $VpdIeee1 = $JsonParameters.PSobject.Properties["vpd_ieee1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vpd_t10"))) { #optional property not found
            $VpdT10 = $null
        } else {
            $VpdT10 = $JsonParameters.PSobject.Properties["vpd_t10"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "warn_level"))) { #optional property not found
            $WarnLevel = $null
        } else {
            $WarnLevel = $JsonParameters.PSobject.Properties["warn_level"].value
        }

        $PSO = [PSCustomObject]@{
            "access_control_records" = ${AccessControlRecords}
            "agent_type" = ${AgentType}
            "app_category" = ${AppCategory}
            "app_uuid" = ${AppUuid}
            "associated_links" = ${AssociatedLinks}
            "block_size" = ${BlockSize}
            "cache_needed_for_pin" = ${CacheNeededForPin}
            "cache_pinned" = ${CachePinned}
            "cache_policy" = ${CachePolicy}
            "caching_enabled" = ${CachingEnabled}
            "cksum_last_verified" = ${CksumLastVerified}
            "consoleUri" = ${ConsoleUri}
            "content_repl_errors_found" = ${ContentReplErrorsFound}
            "creation_time" = ${CreationTime}
            "customerId" = ${CustomerId}
            "dedupe_enabled" = ${DedupeEnabled}
            "description" = ${Description}
            "encryption_cipher" = ${EncryptionCipher}
            "force" = ${Force}
            "full_name" = ${FullName}
            "generation" = ${Generation}
            "inherit_acl" = ${InheritAcl}
            "is_mfa_protected" = ${IsMfaProtected}
            "iscsi_target_scope" = ${IscsiTargetScope}
            "last_content_snap_br_cg_uid" = ${LastContentSnapBrCgUid}
            "last_content_snap_br_gid" = ${LastContentSnapBrGid}
            "last_content_snap_id" = ${LastContentSnapId}
            "last_modified" = ${LastModified}
            "last_snap" = ${LastSnap}
            "limit" = ${Limit}
            "limit_iops" = ${LimitIops}
            "limit_mbps" = ${LimitMbps}
            "metadata" = ${Metadata}
            "move_aborting" = ${MoveAborting}
            "move_bytes_migrated" = ${MoveBytesMigrated}
            "move_bytes_remaining" = ${MoveBytesRemaining}
            "move_est_compl_time" = ${MoveEstComplTime}
            "move_start_time" = ${MoveStartTime}
            "multi_initiator" = ${MultiInitiator}
            "needs_content_repl" = ${NeedsContentRepl}
            "num_snaps" = ${NumSnaps}
            "offline_reason" = ${OfflineReason}
            "online_snaps" = ${OnlineSnaps}
            "pinned_cache_size" = ${PinnedCacheSize}
            "pre_filter" = ${PreFilter}
            "previously_deduped" = ${PreviouslyDeduped}
            "projected_num_snaps" = ${ProjectedNumSnaps}
            "protection_type" = ${ProtectionType}
            "reserve" = ${Reserve}
            "resourceUri" = ${ResourceUri}
            "search_name" = ${SearchName}
            "snap_reserve" = ${SnapReserve}
            "snap_usage_compressed_bytes" = ${SnapUsageCompressedBytes}
            "snap_usage_populated_bytes" = ${SnapUsagePopulatedBytes}
            "snap_usage_uncompressed_bytes" = ${SnapUsageUncompressedBytes}
            "snap_warn_level" = ${SnapWarnLevel}
            "space_usage_level" = ${SpaceUsageLevel}
            "srep_last_sync" = ${SrepLastSync}
            "srep_resync_sync" = ${SrepResyncSync}
            "thinly_provisioned" = ${ThinlyProvisioned}
            "total_usage_bytes" = ${TotalUsageBytes}
            "type" = ${Type}
            "upstream_cache_pinned" = ${UpstreamCachePinned}
            "usage_valid" = ${UsageValid}
            "vol_state" = ${VolState}
            "vol_usage_compressed_bytes" = ${VolUsageCompressedBytes}
            "vol_usage_uncompressed_bytes" = ${VolUsageUncompressedBytes}
            "vpd_ieee0" = ${VpdIeee0}
            "vpd_ieee1" = ${VpdIeee1}
            "vpd_t10" = ${VpdT10}
            "warn_level" = ${WarnLevel}
        }

        return $PSO
    }

}

