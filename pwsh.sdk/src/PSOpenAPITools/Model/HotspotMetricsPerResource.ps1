#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Conatins the volume name along with the hotspot metrics per timestamp

.PARAMETER MaxLatency
The max latency value for the volume from the metrics obtained for that volume
.PARAMETER SeriesData
No description available.
.PARAMETER VolumeId
Id of the volume for which the metrics are listed
.PARAMETER VolumeName
Name of the volume for which the metrics are listed
.OUTPUTS

HotspotMetricsPerResource<PSCustomObject>
#>

function Initialize-HotspotMetricsPerResource {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${MaxLatency},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${SeriesData},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VolumeId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VolumeName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => HotspotMetricsPerResource' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "maxLatency" = ${MaxLatency}
            "seriesData" = ${SeriesData}
            "volumeId" = ${VolumeId}
            "volumeName" = ${VolumeName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to HotspotMetricsPerResource<PSCustomObject>

.DESCRIPTION

Convert from JSON to HotspotMetricsPerResource<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

HotspotMetricsPerResource<PSCustomObject>
#>
function ConvertFrom-JsonToHotspotMetricsPerResource {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => HotspotMetricsPerResource' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in HotspotMetricsPerResource
        $AllProperties = ("maxLatency", "seriesData", "volumeId", "volumeName")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxLatency"))) { #optional property not found
            $MaxLatency = $null
        } else {
            $MaxLatency = $JsonParameters.PSobject.Properties["maxLatency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "seriesData"))) { #optional property not found
            $SeriesData = $null
        } else {
            $SeriesData = $JsonParameters.PSobject.Properties["seriesData"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "volumeId"))) { #optional property not found
            $VolumeId = $null
        } else {
            $VolumeId = $JsonParameters.PSobject.Properties["volumeId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "volumeName"))) { #optional property not found
            $VolumeName = $null
        } else {
            $VolumeName = $JsonParameters.PSobject.Properties["volumeName"].value
        }

        $PSO = [PSCustomObject]@{
            "maxLatency" = ${MaxLatency}
            "seriesData" = ${SeriesData}
            "volumeId" = ${VolumeId}
            "volumeName" = ${VolumeName}
        }

        return $PSO
    }

}

