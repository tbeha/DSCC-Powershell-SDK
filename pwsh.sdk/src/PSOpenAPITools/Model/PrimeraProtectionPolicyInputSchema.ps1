#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Protection policy details

.PARAMETER NoAutomaticSynchronization
Enabling this option results in no synchronization happening between the source and target application sets. This is applicable only in case of periodic replication, and is disabled by default.
.PARAMETER NonZeroRtoConfig
Non-Zero RTO configuration to be used - Active Sync. Even the plain synchronous replication is non zero RTO configuration but for this plain sync configuration, no need to specify any value in this parameter. Cannot be used along with zeroRtoConfig
.PARAMETER OverPeriodAlert
If synchronization of an asynchronous periodic protection takes longer to complete than its synchronization period, an alert is generated. This property is not valid and hence cannot be enabled in case of synchronous replication.
.PARAMETER Remote
No description available.
.PARAMETER RpoSecs
Specifies recovery point objective in seconds for asynchronous periodic protection. Range: 60 - 63072000, and should be an even number. For Synchronous replication, the value defaults to zero even if it is specified. For Asynchronous replication, if rpoSecs is not specified then it would be considered under the no-automatic-synchronization option, and no synchronization happens.
.PARAMETER SecondaryRemote
No description available.
.PARAMETER ZeroRtoConfig
Zero RTO configuration to be used. Peer Persistence, Active Peer Persistence. Cannot be used along with nonZeroRtoConfig
.OUTPUTS

PrimeraProtectionPolicyInputSchema<PSCustomObject>
#>

function Initialize-PrimeraProtectionPolicyInputSchema {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${NoAutomaticSynchronization},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ActiveSync")]
        [String]
        ${NonZeroRtoConfig},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${OverPeriodAlert},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Remote},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${RpoSecs},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${SecondaryRemote},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PP", "APP")]
        [String]
        ${ZeroRtoConfig}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PrimeraProtectionPolicyInputSchema' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Remote) {
            throw "invalid value for 'Remote', 'Remote' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "noAutomaticSynchronization" = ${NoAutomaticSynchronization}
            "nonZeroRtoConfig" = ${NonZeroRtoConfig}
            "overPeriodAlert" = ${OverPeriodAlert}
            "remote" = ${Remote}
            "rpoSecs" = ${RpoSecs}
            "secondaryRemote" = ${SecondaryRemote}
            "zeroRtoConfig" = ${ZeroRtoConfig}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PrimeraProtectionPolicyInputSchema<PSCustomObject>

.DESCRIPTION

Convert from JSON to PrimeraProtectionPolicyInputSchema<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PrimeraProtectionPolicyInputSchema<PSCustomObject>
#>
function ConvertFrom-JsonToPrimeraProtectionPolicyInputSchema {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PrimeraProtectionPolicyInputSchema' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PrimeraProtectionPolicyInputSchema
        $AllProperties = ("noAutomaticSynchronization", "nonZeroRtoConfig", "overPeriodAlert", "remote", "rpoSecs", "secondaryRemote", "zeroRtoConfig")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'remote' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "remote"))) {
            throw "Error! JSON cannot be serialized due to the required property 'remote' missing."
        } else {
            $Remote = $JsonParameters.PSobject.Properties["remote"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "noAutomaticSynchronization"))) { #optional property not found
            $NoAutomaticSynchronization = $null
        } else {
            $NoAutomaticSynchronization = $JsonParameters.PSobject.Properties["noAutomaticSynchronization"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "nonZeroRtoConfig"))) { #optional property not found
            $NonZeroRtoConfig = $null
        } else {
            $NonZeroRtoConfig = $JsonParameters.PSobject.Properties["nonZeroRtoConfig"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "overPeriodAlert"))) { #optional property not found
            $OverPeriodAlert = $null
        } else {
            $OverPeriodAlert = $JsonParameters.PSobject.Properties["overPeriodAlert"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "rpoSecs"))) { #optional property not found
            $RpoSecs = $null
        } else {
            $RpoSecs = $JsonParameters.PSobject.Properties["rpoSecs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "secondaryRemote"))) { #optional property not found
            $SecondaryRemote = $null
        } else {
            $SecondaryRemote = $JsonParameters.PSobject.Properties["secondaryRemote"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "zeroRtoConfig"))) { #optional property not found
            $ZeroRtoConfig = $null
        } else {
            $ZeroRtoConfig = $JsonParameters.PSobject.Properties["zeroRtoConfig"].value
        }

        $PSO = [PSCustomObject]@{
            "noAutomaticSynchronization" = ${NoAutomaticSynchronization}
            "nonZeroRtoConfig" = ${NonZeroRtoConfig}
            "overPeriodAlert" = ${OverPeriodAlert}
            "remote" = ${Remote}
            "rpoSecs" = ${RpoSecs}
            "secondaryRemote" = ${SecondaryRemote}
            "zeroRtoConfig" = ${ZeroRtoConfig}
        }

        return $PSO
    }

}

