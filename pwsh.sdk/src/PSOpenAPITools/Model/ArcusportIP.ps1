#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Autoneg
Auto negotiation state of IP port
.PARAMETER Duplex
Duplex state of IP port
.PARAMETER GatewayAddress
Gateway Address of IP port
.PARAMETER GatewayAddressV6
Gateway Address of IP port
.PARAMETER IpAddress
IP address of IP port
.PARAMETER IpAddressV6
IP address of IP port
.PARAMETER MacAddress
IP address of IP port
.PARAMETER Mtu
Maximum transmission unit (MTU) size
.PARAMETER SubnetMask
NetMask of IP port
.PARAMETER SubnetMaskV6
NetMask of IP port
.OUTPUTS

ArcusportIP<PSCustomObject>
#>

function Initialize-ArcusportIP {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Autoneg},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Duplex},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GatewayAddress},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GatewayAddressV6},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IpAddress},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IpAddressV6},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MacAddress},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Mtu},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SubnetMask},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SubnetMaskV6}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusportIP' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "autoneg" = ${Autoneg}
            "duplex" = ${Duplex}
            "gatewayAddress" = ${GatewayAddress}
            "gatewayAddressV6" = ${GatewayAddressV6}
            "ipAddress" = ${IpAddress}
            "ipAddressV6" = ${IpAddressV6}
            "macAddress" = ${MacAddress}
            "mtu" = ${Mtu}
            "subnetMask" = ${SubnetMask}
            "subnetMaskV6" = ${SubnetMaskV6}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusportIP<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusportIP<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusportIP<PSCustomObject>
#>
function ConvertFrom-JsonToArcusportIP {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusportIP' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusportIP
        $AllProperties = ("autoneg", "duplex", "gatewayAddress", "gatewayAddressV6", "ipAddress", "ipAddressV6", "macAddress", "mtu", "subnetMask", "subnetMaskV6")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "autoneg"))) { #optional property not found
            $Autoneg = $null
        } else {
            $Autoneg = $JsonParameters.PSobject.Properties["autoneg"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "duplex"))) { #optional property not found
            $Duplex = $null
        } else {
            $Duplex = $JsonParameters.PSobject.Properties["duplex"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gatewayAddress"))) { #optional property not found
            $GatewayAddress = $null
        } else {
            $GatewayAddress = $JsonParameters.PSobject.Properties["gatewayAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gatewayAddressV6"))) { #optional property not found
            $GatewayAddressV6 = $null
        } else {
            $GatewayAddressV6 = $JsonParameters.PSobject.Properties["gatewayAddressV6"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ipAddress"))) { #optional property not found
            $IpAddress = $null
        } else {
            $IpAddress = $JsonParameters.PSobject.Properties["ipAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ipAddressV6"))) { #optional property not found
            $IpAddressV6 = $null
        } else {
            $IpAddressV6 = $JsonParameters.PSobject.Properties["ipAddressV6"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "macAddress"))) { #optional property not found
            $MacAddress = $null
        } else {
            $MacAddress = $JsonParameters.PSobject.Properties["macAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mtu"))) { #optional property not found
            $Mtu = $null
        } else {
            $Mtu = $JsonParameters.PSobject.Properties["mtu"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "subnetMask"))) { #optional property not found
            $SubnetMask = $null
        } else {
            $SubnetMask = $JsonParameters.PSobject.Properties["subnetMask"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "subnetMaskV6"))) { #optional property not found
            $SubnetMaskV6 = $null
        } else {
            $SubnetMaskV6 = $JsonParameters.PSobject.Properties["subnetMaskV6"].value
        }

        $PSO = [PSCustomObject]@{
            "autoneg" = ${Autoneg}
            "duplex" = ${Duplex}
            "gatewayAddress" = ${GatewayAddress}
            "gatewayAddressV6" = ${GatewayAddressV6}
            "ipAddress" = ${IpAddress}
            "ipAddressV6" = ${IpAddressV6}
            "macAddress" = ${MacAddress}
            "mtu" = ${Mtu}
            "subnetMask" = ${SubnetMask}
            "subnetMaskV6" = ${SubnetMaskV6}
        }

        return $PSO
    }

}

