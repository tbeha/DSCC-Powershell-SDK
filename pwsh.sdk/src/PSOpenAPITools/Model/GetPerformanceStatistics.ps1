#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Provide performance statistics of file-server

.PARAMETER CustomerId
The customer application identifier
.PARAMETER ReadIops
No description available.
.PARAMETER ReadLatency
No description available.
.PARAMETER ReadThroughput
No description available.
.PARAMETER WriteIops
No description available.
.PARAMETER WriteLatency
No description available.
.PARAMETER WriteThroughput
No description available.
.OUTPUTS

GetPerformanceStatistics<PSCustomObject>
#>

function Initialize-GetPerformanceStatistics {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ReadIops},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ReadLatency},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ReadThroughput},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${WriteIops},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${WriteLatency},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${WriteThroughput}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => GetPerformanceStatistics' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "customerId" = ${CustomerId}
            "readIops" = ${ReadIops}
            "readLatency" = ${ReadLatency}
            "readThroughput" = ${ReadThroughput}
            "writeIops" = ${WriteIops}
            "writeLatency" = ${WriteLatency}
            "writeThroughput" = ${WriteThroughput}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GetPerformanceStatistics<PSCustomObject>

.DESCRIPTION

Convert from JSON to GetPerformanceStatistics<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GetPerformanceStatistics<PSCustomObject>
#>
function ConvertFrom-JsonToGetPerformanceStatistics {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => GetPerformanceStatistics' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GetPerformanceStatistics
        $AllProperties = ("customerId", "readIops", "readLatency", "readThroughput", "writeIops", "writeLatency", "writeThroughput")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerId"))) { #optional property not found
            $CustomerId = $null
        } else {
            $CustomerId = $JsonParameters.PSobject.Properties["customerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "readIops"))) { #optional property not found
            $ReadIops = $null
        } else {
            $ReadIops = $JsonParameters.PSobject.Properties["readIops"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "readLatency"))) { #optional property not found
            $ReadLatency = $null
        } else {
            $ReadLatency = $JsonParameters.PSobject.Properties["readLatency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "readThroughput"))) { #optional property not found
            $ReadThroughput = $null
        } else {
            $ReadThroughput = $JsonParameters.PSobject.Properties["readThroughput"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "writeIops"))) { #optional property not found
            $WriteIops = $null
        } else {
            $WriteIops = $JsonParameters.PSobject.Properties["writeIops"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "writeLatency"))) { #optional property not found
            $WriteLatency = $null
        } else {
            $WriteLatency = $JsonParameters.PSobject.Properties["writeLatency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "writeThroughput"))) { #optional property not found
            $WriteThroughput = $null
        } else {
            $WriteThroughput = $JsonParameters.PSobject.Properties["writeThroughput"].value
        }

        $PSO = [PSCustomObject]@{
            "customerId" = ${CustomerId}
            "readIops" = ${ReadIops}
            "readLatency" = ${ReadLatency}
            "readThroughput" = ${ReadThroughput}
            "writeIops" = ${WriteIops}
            "writeLatency" = ${WriteLatency}
            "writeThroughput" = ${WriteThroughput}
        }

        return $PSO
    }

}

