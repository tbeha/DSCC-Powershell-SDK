#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Request body for creating Application Sets

.PARAMETER AppSetBusinessUnit
App set business unit
.PARAMETER AppSetComments
App set comments
.PARAMETER AppSetImportance
No description available.
.PARAMETER AppSetName
App set name
.PARAMETER AppSetType
No description available.
.PARAMETER CustomAppType
App set name for Custom workloads when appSetType=CUSTOM
.PARAMETER Members
volumes list
.OUTPUTS

ArcuscreateAppSetInput<PSCustomObject>
#>

function Initialize-ArcuscreateAppSetInput {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppSetBusinessUnit},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppSetComments},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("HIGHEST", "HIGH", "MEDIUM", "LOW", "LOWEST")]
        [PSCustomObject]
        ${AppSetImportance},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppSetName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${AppSetType},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomAppType},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Members}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcuscreateAppSetInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $AppSetName) {
            throw "invalid value for 'AppSetName', 'AppSetName' cannot be null."
        }

        if ($null -eq $AppSetType) {
            throw "invalid value for 'AppSetType', 'AppSetType' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "appSetBusinessUnit" = ${AppSetBusinessUnit}
            "appSetComments" = ${AppSetComments}
            "appSetImportance" = ${AppSetImportance}
            "appSetName" = ${AppSetName}
            "appSetType" = ${AppSetType}
            "customAppType" = ${CustomAppType}
            "members" = ${Members}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcuscreateAppSetInput<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcuscreateAppSetInput<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcuscreateAppSetInput<PSCustomObject>
#>
function ConvertFrom-JsonToArcuscreateAppSetInput {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcuscreateAppSetInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcuscreateAppSetInput
        $AllProperties = ("appSetBusinessUnit", "appSetComments", "appSetImportance", "appSetName", "appSetType", "customAppType", "members")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'appSetName' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetName"))) {
            throw "Error! JSON cannot be serialized due to the required property 'appSetName' missing."
        } else {
            $AppSetName = $JsonParameters.PSobject.Properties["appSetName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetType"))) {
            throw "Error! JSON cannot be serialized due to the required property 'appSetType' missing."
        } else {
            $AppSetType = $JsonParameters.PSobject.Properties["appSetType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetBusinessUnit"))) { #optional property not found
            $AppSetBusinessUnit = $null
        } else {
            $AppSetBusinessUnit = $JsonParameters.PSobject.Properties["appSetBusinessUnit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetComments"))) { #optional property not found
            $AppSetComments = $null
        } else {
            $AppSetComments = $JsonParameters.PSobject.Properties["appSetComments"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetImportance"))) { #optional property not found
            $AppSetImportance = $null
        } else {
            $AppSetImportance = $JsonParameters.PSobject.Properties["appSetImportance"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customAppType"))) { #optional property not found
            $CustomAppType = $null
        } else {
            $CustomAppType = $JsonParameters.PSobject.Properties["customAppType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "members"))) { #optional property not found
            $Members = $null
        } else {
            $Members = $JsonParameters.PSobject.Properties["members"].value
        }

        $PSO = [PSCustomObject]@{
            "appSetBusinessUnit" = ${AppSetBusinessUnit}
            "appSetComments" = ${AppSetComments}
            "appSetImportance" = ${AppSetImportance}
            "appSetName" = ${AppSetName}
            "appSetType" = ${AppSetType}
            "customAppType" = ${CustomAppType}
            "members" = ${Members}
        }

        return $PSO
    }

}

