#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER HostGroupId
host group id.
.PARAMETER Lun
Lun number
.OUTPUTS

ExportInputHostGroupsInner<PSCustomObject>
#>

function Initialize-ExportInputHostGroupsInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HostGroupId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Lun}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ExportInputHostGroupsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "host_group_id" = ${HostGroupId}
            "lun" = ${Lun}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ExportInputHostGroupsInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to ExportInputHostGroupsInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ExportInputHostGroupsInner<PSCustomObject>
#>
function ConvertFrom-JsonToExportInputHostGroupsInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ExportInputHostGroupsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ExportInputHostGroupsInner
        $AllProperties = ("host_group_id", "lun")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "host_group_id"))) { #optional property not found
            $HostGroupId = $null
        } else {
            $HostGroupId = $JsonParameters.PSobject.Properties["host_group_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lun"))) { #optional property not found
            $Lun = $null
        } else {
            $Lun = $JsonParameters.PSobject.Properties["lun"].value
        }

        $PSO = [PSCustomObject]@{
            "host_group_id" = ${HostGroupId}
            "lun" = ${Lun}
        }

        return $PSO
    }

}

