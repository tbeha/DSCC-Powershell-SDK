#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AutoLun
Auto Lun
.PARAMETER HostGroupIds
HostGroups
.PARAMETER MaxAutoLun
Number of volumes.
.PARAMETER NoVcn
No VCN
.PARAMETER Override
Override
.PARAMETER Position
Position
.PARAMETER Proximity
Host proximity setting for Active Peer Persistence configuration. Supported values are - PRIMARY, SECONDARY and ALL
.OUTPUTS

ArcusvlunsCreateInput<PSCustomObject>
#>

function Initialize-ArcusvlunsCreateInput {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AutoLun},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${HostGroupIds},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MaxAutoLun},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${NoVcn},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Override},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Position},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PRIMARY", "SECONDARY", "ALL")]
        [String]
        ${Proximity}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusvlunsCreateInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "autoLun" = ${AutoLun}
            "hostGroupIds" = ${HostGroupIds}
            "maxAutoLun" = ${MaxAutoLun}
            "noVcn" = ${NoVcn}
            "override" = ${Override}
            "position" = ${Position}
            "proximity" = ${Proximity}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusvlunsCreateInput<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusvlunsCreateInput<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusvlunsCreateInput<PSCustomObject>
#>
function ConvertFrom-JsonToArcusvlunsCreateInput {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusvlunsCreateInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusvlunsCreateInput
        $AllProperties = ("autoLun", "hostGroupIds", "maxAutoLun", "noVcn", "override", "position", "proximity")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "autoLun"))) { #optional property not found
            $AutoLun = $null
        } else {
            $AutoLun = $JsonParameters.PSobject.Properties["autoLun"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "hostGroupIds"))) { #optional property not found
            $HostGroupIds = $null
        } else {
            $HostGroupIds = $JsonParameters.PSobject.Properties["hostGroupIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxAutoLun"))) { #optional property not found
            $MaxAutoLun = $null
        } else {
            $MaxAutoLun = $JsonParameters.PSobject.Properties["maxAutoLun"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "noVcn"))) { #optional property not found
            $NoVcn = $null
        } else {
            $NoVcn = $JsonParameters.PSobject.Properties["noVcn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "override"))) { #optional property not found
            $Override = $null
        } else {
            $Override = $JsonParameters.PSobject.Properties["override"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "position"))) { #optional property not found
            $Position = $null
        } else {
            $Position = $JsonParameters.PSobject.Properties["position"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "proximity"))) { #optional property not found
            $Proximity = $null
        } else {
            $Proximity = $JsonParameters.PSobject.Properties["proximity"].value
        }

        $PSO = [PSCustomObject]@{
            "autoLun" = ${AutoLun}
            "hostGroupIds" = ${HostGroupIds}
            "maxAutoLun" = ${MaxAutoLun}
            "noVcn" = ${NoVcn}
            "override" = ${Override}
            "position" = ${Position}
            "proximity" = ${Proximity}
        }

        return $PSO
    }

}

