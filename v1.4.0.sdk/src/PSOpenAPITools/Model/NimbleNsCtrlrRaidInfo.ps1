#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER CurCopies
Current number of copies.
.PARAMETER IsResyncing
Is this raid array resynchronizing.
.PARAMETER MaxCopies
Maximum number of copies.
.PARAMETER RaidId
Raid ID for this raid array.
.PARAMETER RaidType
Type of raid for this array.
.OUTPUTS

NimbleNsCtrlrRaidInfo<PSCustomObject>
#>

function Initialize-NimbleNsCtrlrRaidInfo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CurCopies},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsResyncing},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MaxCopies},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${RaidId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RaidType}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleNsCtrlrRaidInfo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "cur_copies" = ${CurCopies}
            "is_resyncing" = ${IsResyncing}
            "max_copies" = ${MaxCopies}
            "raid_id" = ${RaidId}
            "raid_type" = ${RaidType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleNsCtrlrRaidInfo<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleNsCtrlrRaidInfo<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleNsCtrlrRaidInfo<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleNsCtrlrRaidInfo {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleNsCtrlrRaidInfo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleNsCtrlrRaidInfo
        $AllProperties = ("cur_copies", "is_resyncing", "max_copies", "raid_id", "raid_type")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cur_copies"))) { #optional property not found
            $CurCopies = $null
        } else {
            $CurCopies = $JsonParameters.PSobject.Properties["cur_copies"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_resyncing"))) { #optional property not found
            $IsResyncing = $null
        } else {
            $IsResyncing = $JsonParameters.PSobject.Properties["is_resyncing"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "max_copies"))) { #optional property not found
            $MaxCopies = $null
        } else {
            $MaxCopies = $JsonParameters.PSobject.Properties["max_copies"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "raid_id"))) { #optional property not found
            $RaidId = $null
        } else {
            $RaidId = $JsonParameters.PSobject.Properties["raid_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "raid_type"))) { #optional property not found
            $RaidType = $null
        } else {
            $RaidType = $JsonParameters.PSobject.Properties["raid_type"].value
        }

        $PSO = [PSCustomObject]@{
            "cur_copies" = ${CurCopies}
            "is_resyncing" = ${IsResyncing}
            "max_copies" = ${MaxCopies}
            "raid_id" = ${RaidId}
            "raid_type" = ${RaidType}
        }

        return $PSO
    }

}

