#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER FreeMiB
No description available.
.PARAMETER GrownMiB
No description available.
.PARAMETER RawReservedMiB
No description available.
.PARAMETER ReclaimedMiB
No description available.
.PARAMETER ReservedMiB
No description available.
.PARAMETER TotalMiB
No description available.
.PARAMETER UsedMiB
No description available.
.OUTPUTS

Arcusspace<PSCustomObject>
#>

function Initialize-Arcusspace {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${FreeMiB},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${GrownMiB},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${RawReservedMiB},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${ReclaimedMiB},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${ReservedMiB},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${TotalMiB},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${UsedMiB}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => Arcusspace' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "freeMiB" = ${FreeMiB}
            "grownMiB" = ${GrownMiB}
            "rawReservedMiB" = ${RawReservedMiB}
            "reclaimedMiB" = ${ReclaimedMiB}
            "reservedMiB" = ${ReservedMiB}
            "totalMiB" = ${TotalMiB}
            "usedMiB" = ${UsedMiB}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Arcusspace<PSCustomObject>

.DESCRIPTION

Convert from JSON to Arcusspace<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Arcusspace<PSCustomObject>
#>
function ConvertFrom-JsonToArcusspace {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => Arcusspace' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Arcusspace
        $AllProperties = ("freeMiB", "grownMiB", "rawReservedMiB", "reclaimedMiB", "reservedMiB", "totalMiB", "usedMiB")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "freeMiB"))) { #optional property not found
            $FreeMiB = $null
        } else {
            $FreeMiB = $JsonParameters.PSobject.Properties["freeMiB"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "grownMiB"))) { #optional property not found
            $GrownMiB = $null
        } else {
            $GrownMiB = $JsonParameters.PSobject.Properties["grownMiB"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "rawReservedMiB"))) { #optional property not found
            $RawReservedMiB = $null
        } else {
            $RawReservedMiB = $JsonParameters.PSobject.Properties["rawReservedMiB"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reclaimedMiB"))) { #optional property not found
            $ReclaimedMiB = $null
        } else {
            $ReclaimedMiB = $JsonParameters.PSobject.Properties["reclaimedMiB"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reservedMiB"))) { #optional property not found
            $ReservedMiB = $null
        } else {
            $ReservedMiB = $JsonParameters.PSobject.Properties["reservedMiB"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalMiB"))) { #optional property not found
            $TotalMiB = $null
        } else {
            $TotalMiB = $JsonParameters.PSobject.Properties["totalMiB"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "usedMiB"))) { #optional property not found
            $UsedMiB = $null
        } else {
            $UsedMiB = $JsonParameters.PSobject.Properties["usedMiB"].value
        }

        $PSO = [PSCustomObject]@{
            "freeMiB" = ${FreeMiB}
            "grownMiB" = ${GrownMiB}
            "rawReservedMiB" = ${RawReservedMiB}
            "reclaimedMiB" = ${ReclaimedMiB}
            "reservedMiB" = ${ReservedMiB}
            "totalMiB" = ${TotalMiB}
            "usedMiB" = ${UsedMiB}
        }

        return $PSO
    }

}

