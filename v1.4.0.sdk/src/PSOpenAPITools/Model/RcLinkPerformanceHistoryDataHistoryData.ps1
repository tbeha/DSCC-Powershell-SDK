#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

performance history data

.PARAMETER LinkRoundTripTimeData
No description available.
.PARAMETER LinkThroughputData
No description available.
.PARAMETER TransmittedData
No description available.
.OUTPUTS

RcLinkPerformanceHistoryDataHistoryData<PSCustomObject>
#>

function Initialize-RcLinkPerformanceHistoryDataHistoryData {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${LinkRoundTripTimeData},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${LinkThroughputData},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${TransmittedData}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => RcLinkPerformanceHistoryDataHistoryData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "linkRoundTripTimeData" = ${LinkRoundTripTimeData}
            "linkThroughputData" = ${LinkThroughputData}
            "transmittedData" = ${TransmittedData}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to RcLinkPerformanceHistoryDataHistoryData<PSCustomObject>

.DESCRIPTION

Convert from JSON to RcLinkPerformanceHistoryDataHistoryData<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

RcLinkPerformanceHistoryDataHistoryData<PSCustomObject>
#>
function ConvertFrom-JsonToRcLinkPerformanceHistoryDataHistoryData {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => RcLinkPerformanceHistoryDataHistoryData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RcLinkPerformanceHistoryDataHistoryData
        $AllProperties = ("linkRoundTripTimeData", "linkThroughputData", "transmittedData")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "linkRoundTripTimeData"))) { #optional property not found
            $LinkRoundTripTimeData = $null
        } else {
            $LinkRoundTripTimeData = $JsonParameters.PSobject.Properties["linkRoundTripTimeData"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "linkThroughputData"))) { #optional property not found
            $LinkThroughputData = $null
        } else {
            $LinkThroughputData = $JsonParameters.PSobject.Properties["linkThroughputData"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "transmittedData"))) { #optional property not found
            $TransmittedData = $null
        } else {
            $TransmittedData = $JsonParameters.PSobject.Properties["transmittedData"].value
        }

        $PSO = [PSCustomObject]@{
            "linkRoundTripTimeData" = ${LinkRoundTripTimeData}
            "linkThroughputData" = ${LinkThroughputData}
            "transmittedData" = ${TransmittedData}
        }

        return $PSO
    }

}

