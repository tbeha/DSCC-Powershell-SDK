#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Request body for adding a trusted certificate

.PARAMETER Action
Action to perform with trusted certificate
.PARAMETER Parameters
No description available.
.OUTPUTS

AddTrustedCertificateInput<PSCustomObject>
#>

function Initialize-AddTrustedCertificateInput {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("VERIFY_CERT_CHAIN", "INSTALL_CERT_CHAIN", "VERIFY_AND_INSTALL_CERT_CHAIN")]
        [String]
        ${Action},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Parameters}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AddTrustedCertificateInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Action) {
            throw "invalid value for 'Action', 'Action' cannot be null."
        }

        if ($null -eq $Parameters) {
            throw "invalid value for 'Parameters', 'Parameters' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "action" = ${Action}
            "parameters" = ${Parameters}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AddTrustedCertificateInput<PSCustomObject>

.DESCRIPTION

Convert from JSON to AddTrustedCertificateInput<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AddTrustedCertificateInput<PSCustomObject>
#>
function ConvertFrom-JsonToAddTrustedCertificateInput {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AddTrustedCertificateInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AddTrustedCertificateInput
        $AllProperties = ("action", "parameters")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'action' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "action"))) {
            throw "Error! JSON cannot be serialized due to the required property 'action' missing."
        } else {
            $Action = $JsonParameters.PSobject.Properties["action"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parameters"))) {
            throw "Error! JSON cannot be serialized due to the required property 'parameters' missing."
        } else {
            $Parameters = $JsonParameters.PSobject.Properties["parameters"].value
        }

        $PSO = [PSCustomObject]@{
            "action" = ${Action}
            "parameters" = ${Parameters}
        }

        return $PSO
    }

}

