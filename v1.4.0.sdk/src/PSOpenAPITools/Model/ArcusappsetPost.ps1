#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Comment
Comment if any
.PARAMETER ExpireSecs
Expiration time in seconds
.PARAMETER ReadOnly
Read only or Read/Write
.PARAMETER RetainSecs
Reatain time in seconds
.PARAMETER SnapshotName
Name for snapshot
.PARAMETER VvNamePattern
No description available.
.OUTPUTS

ArcusappsetPost<PSCustomObject>
#>

function Initialize-ArcusappsetPost {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Comment},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ExpireSecs},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${ReadOnly},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${RetainSecs},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SnapshotName},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PARENT_TIMESTAMP", "PARENT_SEC_SINCE_EPOCH", "CUSTOM")]
        [PSCustomObject]
        ${VvNamePattern}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusappsetPost' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "comment" = ${Comment}
            "expireSecs" = ${ExpireSecs}
            "readOnly" = ${ReadOnly}
            "retainSecs" = ${RetainSecs}
            "snapshotName" = ${SnapshotName}
            "vvNamePattern" = ${VvNamePattern}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusappsetPost<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusappsetPost<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusappsetPost<PSCustomObject>
#>
function ConvertFrom-JsonToArcusappsetPost {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusappsetPost' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusappsetPost
        $AllProperties = ("comment", "expireSecs", "readOnly", "retainSecs", "snapshotName", "vvNamePattern")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'vvNamePattern' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vvNamePattern"))) {
            throw "Error! JSON cannot be serialized due to the required property 'vvNamePattern' missing."
        } else {
            $VvNamePattern = $JsonParameters.PSobject.Properties["vvNamePattern"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "comment"))) { #optional property not found
            $Comment = $null
        } else {
            $Comment = $JsonParameters.PSobject.Properties["comment"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "expireSecs"))) { #optional property not found
            $ExpireSecs = $null
        } else {
            $ExpireSecs = $JsonParameters.PSobject.Properties["expireSecs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "readOnly"))) { #optional property not found
            $ReadOnly = $null
        } else {
            $ReadOnly = $JsonParameters.PSobject.Properties["readOnly"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "retainSecs"))) { #optional property not found
            $RetainSecs = $null
        } else {
            $RetainSecs = $JsonParameters.PSobject.Properties["retainSecs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snapshotName"))) { #optional property not found
            $SnapshotName = $null
        } else {
            $SnapshotName = $JsonParameters.PSobject.Properties["snapshotName"].value
        }

        $PSO = [PSCustomObject]@{
            "comment" = ${Comment}
            "expireSecs" = ${ExpireSecs}
            "readOnly" = ${ReadOnly}
            "retainSecs" = ${RetainSecs}
            "snapshotName" = ${SnapshotName}
            "vvNamePattern" = ${VvNamePattern}
        }

        return $PSO
    }

}

