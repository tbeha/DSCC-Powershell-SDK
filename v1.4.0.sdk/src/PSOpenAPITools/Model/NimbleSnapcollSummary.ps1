#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER SnapcollCreationTime
Creation time of snapshot collection.
.PARAMETER SnapcollId
ID of snapshot collection.
.PARAMETER SnapcollName
Name of snapshot collection.
.OUTPUTS

NimbleSnapcollSummary<PSCustomObject>
#>

function Initialize-NimbleSnapcollSummary {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SnapcollCreationTime},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SnapcollId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SnapcollName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleSnapcollSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "snapcoll_creation_time" = ${SnapcollCreationTime}
            "snapcoll_id" = ${SnapcollId}
            "snapcoll_name" = ${SnapcollName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleSnapcollSummary<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleSnapcollSummary<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleSnapcollSummary<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleSnapcollSummary {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleSnapcollSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleSnapcollSummary
        $AllProperties = ("snapcoll_creation_time", "snapcoll_id", "snapcoll_name")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snapcoll_creation_time"))) { #optional property not found
            $SnapcollCreationTime = $null
        } else {
            $SnapcollCreationTime = $JsonParameters.PSobject.Properties["snapcoll_creation_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snapcoll_id"))) { #optional property not found
            $SnapcollId = $null
        } else {
            $SnapcollId = $JsonParameters.PSobject.Properties["snapcoll_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snapcoll_name"))) { #optional property not found
            $SnapcollName = $null
        } else {
            $SnapcollName = $JsonParameters.PSobject.Properties["snapcoll_name"].value
        }

        $PSO = [PSCustomObject]@{
            "snapcoll_creation_time" = ${SnapcollCreationTime}
            "snapcoll_id" = ${SnapcollId}
            "snapcoll_name" = ${SnapcollName}
        }

        return $PSO
    }

}

