#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Public key of the array.

.PARAMETER Key
The key.
.PARAMETER KeyName
The user that owns the key.
.PARAMETER KeyType
The key type.
.OUTPUTS

PublicKeyDetails<PSCustomObject>
#>

function Initialize-PublicKeyDetails {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Key},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyName},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyType}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PublicKeyDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "key" = ${Key}
            "key_name" = ${KeyName}
            "key_type" = ${KeyType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PublicKeyDetails<PSCustomObject>

.DESCRIPTION

Convert from JSON to PublicKeyDetails<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PublicKeyDetails<PSCustomObject>
#>
function ConvertFrom-JsonToPublicKeyDetails {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PublicKeyDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PublicKeyDetails
        $AllProperties = ("key", "key_name", "key_type")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "key"))) { #optional property not found
            $Key = $null
        } else {
            $Key = $JsonParameters.PSobject.Properties["key"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "key_name"))) { #optional property not found
            $KeyName = $null
        } else {
            $KeyName = $JsonParameters.PSobject.Properties["key_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "key_type"))) { #optional property not found
            $KeyType = $null
        } else {
            $KeyType = $JsonParameters.PSobject.Properties["key_type"].value
        }

        $PSO = [PSCustomObject]@{
            "key" = ${Key}
            "key_name" = ${KeyName}
            "key_type" = ${KeyType}
        }

        return $PSO
    }

}

