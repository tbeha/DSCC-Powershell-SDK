#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Hosts
List of hosts.
.PARAMETER ScHostGroupId
Identifier for the host group in the Data Services Cloud Console (DSCC)
.PARAMETER ScHostGroupName
Name of the Host Group in the Data Services Cloud Console (DSCC)
.OUTPUTS

NimbleHostGroupDetail<PSCustomObject>
#>

function Initialize-NimbleHostGroupDetail {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Hosts},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ScHostGroupId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ScHostGroupName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleHostGroupDetail' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "hosts" = ${Hosts}
            "sc_host_group_id" = ${ScHostGroupId}
            "sc_host_group_name" = ${ScHostGroupName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleHostGroupDetail<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleHostGroupDetail<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleHostGroupDetail<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleHostGroupDetail {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleHostGroupDetail' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleHostGroupDetail
        $AllProperties = ("hosts", "sc_host_group_id", "sc_host_group_name")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "hosts"))) { #optional property not found
            $Hosts = $null
        } else {
            $Hosts = $JsonParameters.PSobject.Properties["hosts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sc_host_group_id"))) { #optional property not found
            $ScHostGroupId = $null
        } else {
            $ScHostGroupId = $JsonParameters.PSobject.Properties["sc_host_group_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sc_host_group_name"))) { #optional property not found
            $ScHostGroupName = $null
        } else {
            $ScHostGroupName = $JsonParameters.PSobject.Properties["sc_host_group_name"].value
        }

        $PSO = [PSCustomObject]@{
            "hosts" = ${Hosts}
            "sc_host_group_id" = ${ScHostGroupId}
            "sc_host_group_name" = ${ScHostGroupName}
        }

        return $PSO
    }

}

