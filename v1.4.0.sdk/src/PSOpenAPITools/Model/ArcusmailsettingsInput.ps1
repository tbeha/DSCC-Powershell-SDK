#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER MailHostDomain
SMTP server's Host Domain
.PARAMETER MailHostServer
SMTP server address/IP
.PARAMETER Port
SMTP server's port number
.PARAMETER SenderEmailId
Sender email address
.OUTPUTS

ArcusmailsettingsInput<PSCustomObject>
#>

function Initialize-ArcusmailsettingsInput {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MailHostDomain},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MailHostServer},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("25", "465", "587", "2525")]
        [System.Nullable[Int64]]
        ${Port},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SenderEmailId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcusmailsettingsInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "mailHostDomain" = ${MailHostDomain}
            "mailHostServer" = ${MailHostServer}
            "port" = ${Port}
            "senderEmailId" = ${SenderEmailId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcusmailsettingsInput<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcusmailsettingsInput<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcusmailsettingsInput<PSCustomObject>
#>
function ConvertFrom-JsonToArcusmailsettingsInput {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcusmailsettingsInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcusmailsettingsInput
        $AllProperties = ("mailHostDomain", "mailHostServer", "port", "senderEmailId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mailHostDomain"))) { #optional property not found
            $MailHostDomain = $null
        } else {
            $MailHostDomain = $JsonParameters.PSobject.Properties["mailHostDomain"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mailHostServer"))) { #optional property not found
            $MailHostServer = $null
        } else {
            $MailHostServer = $JsonParameters.PSobject.Properties["mailHostServer"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "port"))) { #optional property not found
            $Port = $null
        } else {
            $Port = $JsonParameters.PSobject.Properties["port"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "senderEmailId"))) { #optional property not found
            $SenderEmailId = $null
        } else {
            $SenderEmailId = $JsonParameters.PSobject.Properties["senderEmailId"].value
        }

        $PSO = [PSCustomObject]@{
            "mailHostDomain" = ${MailHostDomain}
            "mailHostServer" = ${MailHostServer}
            "port" = ${Port}
            "senderEmailId" = ${SenderEmailId}
        }

        return $PSO
    }

}

