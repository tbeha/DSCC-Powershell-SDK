#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER BucketName
Bucket name in which drifts are detected
.PARAMETER BucketUnit
Metric of the bucket in which drift is detected
.PARAMETER DriftType
Indicates if the drift increased or decreased
.PARAMETER Magnitude
Quantity of workload change in the bucket where drift detected
.OUTPUTS

DriftBucketsInner<PSCustomObject>
#>

function Initialize-DriftBucketsInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${BucketName},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BucketUnit},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DriftType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Magnitude}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => DriftBucketsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "bucketName" = ${BucketName}
            "bucketUnit" = ${BucketUnit}
            "driftType" = ${DriftType}
            "magnitude" = ${Magnitude}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DriftBucketsInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to DriftBucketsInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DriftBucketsInner<PSCustomObject>
#>
function ConvertFrom-JsonToDriftBucketsInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => DriftBucketsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DriftBucketsInner
        $AllProperties = ("bucketName", "bucketUnit", "driftType", "magnitude")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bucketName"))) { #optional property not found
            $BucketName = $null
        } else {
            $BucketName = $JsonParameters.PSobject.Properties["bucketName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bucketUnit"))) { #optional property not found
            $BucketUnit = $null
        } else {
            $BucketUnit = $JsonParameters.PSobject.Properties["bucketUnit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "driftType"))) { #optional property not found
            $DriftType = $null
        } else {
            $DriftType = $JsonParameters.PSobject.Properties["driftType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "magnitude"))) { #optional property not found
            $Magnitude = $null
        } else {
            $Magnitude = $JsonParameters.PSobject.Properties["magnitude"].value
        }

        $PSO = [PSCustomObject]@{
            "bucketName" = ${BucketName}
            "bucketUnit" = ${BucketUnit}
            "driftType" = ${DriftType}
            "magnitude" = ${Magnitude}
        }

        return $PSO
    }

}

