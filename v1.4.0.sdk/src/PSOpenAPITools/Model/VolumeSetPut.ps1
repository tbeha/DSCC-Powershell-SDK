#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.4.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AddMembers
Members to add to application set
.PARAMETER AppSetBusinessUnit
App set business unit
.PARAMETER AppSetComments
App set comments
.PARAMETER AppSetImportance
No description available.
.PARAMETER AppSetName
App set name
.PARAMETER AppSetType
No description available.
.PARAMETER CustomAppType
App set name for Custom workloads when appSetType=CUSTOM
.PARAMETER RemoveMembers
Members to remove from application set
.OUTPUTS

VolumeSetPut<PSCustomObject>
#>

function Initialize-VolumeSetPut {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${AddMembers},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppSetBusinessUnit},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppSetComments},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("HIGHEST", "HIGH", "MEDIUM", "LOW", "LOWEST")]
        [PSCustomObject]
        ${AppSetImportance},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppSetName},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${AppSetType},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomAppType},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${RemoveMembers}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => VolumeSetPut' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "addMembers" = ${AddMembers}
            "appSetBusinessUnit" = ${AppSetBusinessUnit}
            "appSetComments" = ${AppSetComments}
            "appSetImportance" = ${AppSetImportance}
            "appSetName" = ${AppSetName}
            "appSetType" = ${AppSetType}
            "customAppType" = ${CustomAppType}
            "removeMembers" = ${RemoveMembers}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to VolumeSetPut<PSCustomObject>

.DESCRIPTION

Convert from JSON to VolumeSetPut<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

VolumeSetPut<PSCustomObject>
#>
function ConvertFrom-JsonToVolumeSetPut {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => VolumeSetPut' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in VolumeSetPut
        $AllProperties = ("addMembers", "appSetBusinessUnit", "appSetComments", "appSetImportance", "appSetName", "appSetType", "customAppType", "removeMembers")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "addMembers"))) { #optional property not found
            $AddMembers = $null
        } else {
            $AddMembers = $JsonParameters.PSobject.Properties["addMembers"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetBusinessUnit"))) { #optional property not found
            $AppSetBusinessUnit = $null
        } else {
            $AppSetBusinessUnit = $JsonParameters.PSobject.Properties["appSetBusinessUnit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetComments"))) { #optional property not found
            $AppSetComments = $null
        } else {
            $AppSetComments = $JsonParameters.PSobject.Properties["appSetComments"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetImportance"))) { #optional property not found
            $AppSetImportance = $null
        } else {
            $AppSetImportance = $JsonParameters.PSobject.Properties["appSetImportance"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetName"))) { #optional property not found
            $AppSetName = $null
        } else {
            $AppSetName = $JsonParameters.PSobject.Properties["appSetName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appSetType"))) { #optional property not found
            $AppSetType = $null
        } else {
            $AppSetType = $JsonParameters.PSobject.Properties["appSetType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customAppType"))) { #optional property not found
            $CustomAppType = $null
        } else {
            $CustomAppType = $JsonParameters.PSobject.Properties["customAppType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "removeMembers"))) { #optional property not found
            $RemoveMembers = $null
        } else {
            $RemoveMembers = $JsonParameters.PSobject.Properties["removeMembers"].value
        }

        $PSO = [PSCustomObject]@{
            "addMembers" = ${AddMembers}
            "appSetBusinessUnit" = ${AppSetBusinessUnit}
            "appSetComments" = ${AppSetComments}
            "appSetImportance" = ${AppSetImportance}
            "appSetName" = ${AppSetName}
            "appSetType" = ${AppSetType}
            "customAppType" = ${CustomAppType}
            "removeMembers" = ${RemoveMembers}
        }

        return $PSO
    }

}

