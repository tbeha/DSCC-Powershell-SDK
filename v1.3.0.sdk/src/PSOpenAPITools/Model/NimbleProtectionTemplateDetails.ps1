#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AgentUsername
Generic Backup agent username.
.PARAMETER AssociatedLinks
Associated Links Details
.PARAMETER ConsoleUri
consoleUri for detailed storage object
.PARAMETER CustomerId
customerId
.PARAMETER Description
Text description of protection template.
.PARAMETER FullName
Fully qualified name of protection template.
.PARAMETER Generation
generation
.PARAMETER ReplPriority
Replication priority for the protection template with the following choices: {normal | high}. Possible values:'normal', 'high'.
.PARAMETER ResourceUri
Link to the object URI
.PARAMETER ScheduleList
List of schedules for this protection policy.
.PARAMETER SearchName
Name of protection template used for object search.
.PARAMETER Type
type
.PARAMETER VcenterUsername
VMware vCenter username.
.OUTPUTS

NimbleProtectionTemplateDetails<PSCustomObject>
#>

function Initialize-NimbleProtectionTemplateDetails {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AgentUsername},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${AssociatedLinks},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConsoleUri},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FullName},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Generation},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReplPriority},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ResourceUri},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ScheduleList},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SearchName},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Type},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VcenterUsername}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleProtectionTemplateDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "agent_username" = ${AgentUsername}
            "associated_links" = ${AssociatedLinks}
            "consoleUri" = ${ConsoleUri}
            "customerId" = ${CustomerId}
            "description" = ${Description}
            "full_name" = ${FullName}
            "generation" = ${Generation}
            "repl_priority" = ${ReplPriority}
            "resourceUri" = ${ResourceUri}
            "schedule_list" = ${ScheduleList}
            "search_name" = ${SearchName}
            "type" = ${Type}
            "vcenter_username" = ${VcenterUsername}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleProtectionTemplateDetails<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleProtectionTemplateDetails<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleProtectionTemplateDetails<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleProtectionTemplateDetails {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleProtectionTemplateDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleProtectionTemplateDetails
        $AllProperties = ("agent_username", "associated_links", "consoleUri", "customerId", "description", "full_name", "generation", "repl_priority", "resourceUri", "schedule_list", "search_name", "type", "vcenter_username")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "agent_username"))) { #optional property not found
            $AgentUsername = $null
        } else {
            $AgentUsername = $JsonParameters.PSobject.Properties["agent_username"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "associated_links"))) { #optional property not found
            $AssociatedLinks = $null
        } else {
            $AssociatedLinks = $JsonParameters.PSobject.Properties["associated_links"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "consoleUri"))) { #optional property not found
            $ConsoleUri = $null
        } else {
            $ConsoleUri = $JsonParameters.PSobject.Properties["consoleUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerId"))) { #optional property not found
            $CustomerId = $null
        } else {
            $CustomerId = $JsonParameters.PSobject.Properties["customerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "full_name"))) { #optional property not found
            $FullName = $null
        } else {
            $FullName = $JsonParameters.PSobject.Properties["full_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "generation"))) { #optional property not found
            $Generation = $null
        } else {
            $Generation = $JsonParameters.PSobject.Properties["generation"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "repl_priority"))) { #optional property not found
            $ReplPriority = $null
        } else {
            $ReplPriority = $JsonParameters.PSobject.Properties["repl_priority"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "resourceUri"))) { #optional property not found
            $ResourceUri = $null
        } else {
            $ResourceUri = $JsonParameters.PSobject.Properties["resourceUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "schedule_list"))) { #optional property not found
            $ScheduleList = $null
        } else {
            $ScheduleList = $JsonParameters.PSobject.Properties["schedule_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "search_name"))) { #optional property not found
            $SearchName = $null
        } else {
            $SearchName = $JsonParameters.PSobject.Properties["search_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vcenter_username"))) { #optional property not found
            $VcenterUsername = $null
        } else {
            $VcenterUsername = $JsonParameters.PSobject.Properties["vcenter_username"].value
        }

        $PSO = [PSCustomObject]@{
            "agent_username" = ${AgentUsername}
            "associated_links" = ${AssociatedLinks}
            "consoleUri" = ${ConsoleUri}
            "customerId" = ${CustomerId}
            "description" = ${Description}
            "full_name" = ${FullName}
            "generation" = ${Generation}
            "repl_priority" = ${ReplPriority}
            "resourceUri" = ${ResourceUri}
            "schedule_list" = ${ScheduleList}
            "search_name" = ${SearchName}
            "type" = ${Type}
            "vcenter_username" = ${VcenterUsername}
        }

        return $PSO
    }

}

