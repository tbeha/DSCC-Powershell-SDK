#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER SnapshotUsage
capacity usage value at particular timestamp  (in MiB)
.PARAMETER Timestamp
epoch timestamp
.PARAMETER VolumeUsage
capacity usage value at particular timestamp  (in MiB)
.OUTPUTS

NimblevolumeCapacitySeriesData<PSCustomObject>
#>

function Initialize-NimblevolumeCapacitySeriesData {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${SnapshotUsage},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${VolumeUsage}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimblevolumeCapacitySeriesData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "snapshot_usage" = ${SnapshotUsage}
            "timestamp" = ${Timestamp}
            "volume_usage" = ${VolumeUsage}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimblevolumeCapacitySeriesData<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimblevolumeCapacitySeriesData<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimblevolumeCapacitySeriesData<PSCustomObject>
#>
function ConvertFrom-JsonToNimblevolumeCapacitySeriesData {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimblevolumeCapacitySeriesData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimblevolumeCapacitySeriesData
        $AllProperties = ("snapshot_usage", "timestamp", "volume_usage")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "snapshot_usage"))) { #optional property not found
            $SnapshotUsage = $null
        } else {
            $SnapshotUsage = $JsonParameters.PSobject.Properties["snapshot_usage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "volume_usage"))) { #optional property not found
            $VolumeUsage = $null
        } else {
            $VolumeUsage = $JsonParameters.PSobject.Properties["volume_usage"].value
        }

        $PSO = [PSCustomObject]@{
            "snapshot_usage" = ${SnapshotUsage}
            "timestamp" = ${Timestamp}
            "volume_usage" = ${VolumeUsage}
        }

        return $PSO
    }

}

