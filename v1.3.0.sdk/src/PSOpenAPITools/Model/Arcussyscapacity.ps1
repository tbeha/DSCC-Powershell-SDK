#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

system capacity details

.PARAMETER AssociatedLinks
Associated Links Details
.PARAMETER CapacityByTier
No description available.
.PARAMETER CapacityDetail
No description available.
.PARAMETER CapacitySummary
No description available.
.PARAMETER CustomerId
customerId
.PARAMETER FcCapacitySummary
No description available.
.PARAMETER Id
ID string uniquely identifying the object.
.PARAMETER NlCapacitySummary
No description available.
.PARAMETER RequestUri
requestUri for detailed storage object
.PARAMETER ResourceUri
resourceUri for detailed storage object
.PARAMETER SsdCapacitySummary
No description available.
.PARAMETER SystemId
SystemId/serialNumber of the array.
.PARAMETER UtilizationSummary
No description available.
.OUTPUTS

Arcussyscapacity<PSCustomObject>
#>

function Initialize-Arcussyscapacity {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${AssociatedLinks},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CapacityByTier},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CapacityDetail},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CapacitySummary},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${FcCapacitySummary},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${NlCapacitySummary},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RequestUri},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ResourceUri},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${SsdCapacitySummary},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SystemId},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${UtilizationSummary}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => Arcussyscapacity' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "associatedLinks" = ${AssociatedLinks}
            "capacityByTier" = ${CapacityByTier}
            "capacityDetail" = ${CapacityDetail}
            "capacitySummary" = ${CapacitySummary}
            "customerId" = ${CustomerId}
            "fcCapacitySummary" = ${FcCapacitySummary}
            "id" = ${Id}
            "nlCapacitySummary" = ${NlCapacitySummary}
            "requestUri" = ${RequestUri}
            "resourceUri" = ${ResourceUri}
            "ssdCapacitySummary" = ${SsdCapacitySummary}
            "systemId" = ${SystemId}
            "utilizationSummary" = ${UtilizationSummary}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Arcussyscapacity<PSCustomObject>

.DESCRIPTION

Convert from JSON to Arcussyscapacity<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Arcussyscapacity<PSCustomObject>
#>
function ConvertFrom-JsonToArcussyscapacity {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => Arcussyscapacity' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Arcussyscapacity
        $AllProperties = ("associatedLinks", "capacityByTier", "capacityDetail", "capacitySummary", "customerId", "fcCapacitySummary", "id", "nlCapacitySummary", "requestUri", "resourceUri", "ssdCapacitySummary", "systemId", "utilizationSummary")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "associatedLinks"))) { #optional property not found
            $AssociatedLinks = $null
        } else {
            $AssociatedLinks = $JsonParameters.PSobject.Properties["associatedLinks"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "capacityByTier"))) { #optional property not found
            $CapacityByTier = $null
        } else {
            $CapacityByTier = $JsonParameters.PSobject.Properties["capacityByTier"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "capacityDetail"))) { #optional property not found
            $CapacityDetail = $null
        } else {
            $CapacityDetail = $JsonParameters.PSobject.Properties["capacityDetail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "capacitySummary"))) { #optional property not found
            $CapacitySummary = $null
        } else {
            $CapacitySummary = $JsonParameters.PSobject.Properties["capacitySummary"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerId"))) { #optional property not found
            $CustomerId = $null
        } else {
            $CustomerId = $JsonParameters.PSobject.Properties["customerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fcCapacitySummary"))) { #optional property not found
            $FcCapacitySummary = $null
        } else {
            $FcCapacitySummary = $JsonParameters.PSobject.Properties["fcCapacitySummary"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "nlCapacitySummary"))) { #optional property not found
            $NlCapacitySummary = $null
        } else {
            $NlCapacitySummary = $JsonParameters.PSobject.Properties["nlCapacitySummary"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "requestUri"))) { #optional property not found
            $RequestUri = $null
        } else {
            $RequestUri = $JsonParameters.PSobject.Properties["requestUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "resourceUri"))) { #optional property not found
            $ResourceUri = $null
        } else {
            $ResourceUri = $JsonParameters.PSobject.Properties["resourceUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ssdCapacitySummary"))) { #optional property not found
            $SsdCapacitySummary = $null
        } else {
            $SsdCapacitySummary = $JsonParameters.PSobject.Properties["ssdCapacitySummary"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "systemId"))) { #optional property not found
            $SystemId = $null
        } else {
            $SystemId = $JsonParameters.PSobject.Properties["systemId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "utilizationSummary"))) { #optional property not found
            $UtilizationSummary = $null
        } else {
            $UtilizationSummary = $JsonParameters.PSobject.Properties["utilizationSummary"].value
        }

        $PSO = [PSCustomObject]@{
            "associatedLinks" = ${AssociatedLinks}
            "capacityByTier" = ${CapacityByTier}
            "capacityDetail" = ${CapacityDetail}
            "capacitySummary" = ${CapacitySummary}
            "customerId" = ${CustomerId}
            "fcCapacitySummary" = ${FcCapacitySummary}
            "id" = ${Id}
            "nlCapacitySummary" = ${NlCapacitySummary}
            "requestUri" = ${RequestUri}
            "resourceUri" = ${ResourceUri}
            "ssdCapacitySummary" = ${SsdCapacitySummary}
            "systemId" = ${SystemId}
            "utilizationSummary" = ${UtilizationSummary}
        }

        return $PSO
    }

}

