#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER DuplicateIds
host/hostgroup ids of all avialable duplicates
.PARAMETER Id
Identifier for duplicate host.
.PARAMETER Members
initiator Id of all initiaors
.PARAMETER Name
Name of the host.
.PARAMETER Systems
system IDs to which the host belongs to. `Filter`
.OUTPUTS

BulkMergeCandidatesObject<PSCustomObject>
#>

function Initialize-BulkMergeCandidatesObject {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${DuplicateIds},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Members},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Systems}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => BulkMergeCandidatesObject' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "duplicateIds" = ${DuplicateIds}
            "id" = ${Id}
            "members" = ${Members}
            "name" = ${Name}
            "systems" = ${Systems}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BulkMergeCandidatesObject<PSCustomObject>

.DESCRIPTION

Convert from JSON to BulkMergeCandidatesObject<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BulkMergeCandidatesObject<PSCustomObject>
#>
function ConvertFrom-JsonToBulkMergeCandidatesObject {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => BulkMergeCandidatesObject' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BulkMergeCandidatesObject
        $AllProperties = ("duplicateIds", "id", "members", "name", "systems")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "duplicateIds"))) { #optional property not found
            $DuplicateIds = $null
        } else {
            $DuplicateIds = $JsonParameters.PSobject.Properties["duplicateIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "members"))) { #optional property not found
            $Members = $null
        } else {
            $Members = $JsonParameters.PSobject.Properties["members"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "systems"))) { #optional property not found
            $Systems = $null
        } else {
            $Systems = $JsonParameters.PSobject.Properties["systems"].value
        }

        $PSO = [PSCustomObject]@{
            "duplicateIds" = ${DuplicateIds}
            "id" = ${Id}
            "members" = ${Members}
            "name" = ${Name}
            "systems" = ${Systems}
        }

        return $PSO
    }

}

