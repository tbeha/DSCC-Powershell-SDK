#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

capacity performance trends for given granularity

.PARAMETER CapacityData
No description available.
.PARAMETER EndTime
end time of the capacity history
.PARAMETER RequestUri
requestUri for detailed storage object
.PARAMETER StartTime
start time of the capacity history
.OUTPUTS

ArcuscapacityHistory<PSCustomObject>
#>

function Initialize-ArcuscapacityHistory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CapacityData},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${EndTime},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RequestUri},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${StartTime}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArcuscapacityHistory' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "capacityData" = ${CapacityData}
            "endTime" = ${EndTime}
            "requestUri" = ${RequestUri}
            "startTime" = ${StartTime}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArcuscapacityHistory<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArcuscapacityHistory<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArcuscapacityHistory<PSCustomObject>
#>
function ConvertFrom-JsonToArcuscapacityHistory {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArcuscapacityHistory' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArcuscapacityHistory
        $AllProperties = ("capacityData", "endTime", "requestUri", "startTime")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "capacityData"))) { #optional property not found
            $CapacityData = $null
        } else {
            $CapacityData = $JsonParameters.PSobject.Properties["capacityData"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "endTime"))) { #optional property not found
            $EndTime = $null
        } else {
            $EndTime = $JsonParameters.PSobject.Properties["endTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "requestUri"))) { #optional property not found
            $RequestUri = $null
        } else {
            $RequestUri = $JsonParameters.PSobject.Properties["requestUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "startTime"))) { #optional property not found
            $StartTime = $null
        } else {
            $StartTime = $JsonParameters.PSobject.Properties["startTime"].value
        }

        $PSO = [PSCustomObject]@{
            "capacityData" = ${CapacityData}
            "endTime" = ${EndTime}
            "requestUri" = ${RequestUri}
            "startTime" = ${StartTime}
        }

        return $PSO
    }

}

