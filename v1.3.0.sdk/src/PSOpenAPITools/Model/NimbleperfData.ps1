#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Performance metrics average values

.PARAMETER Avg1day
last one day avg data
.PARAMETER Avg1hour
last one hour avg data
.PARAMETER Avg8hours
last 8 hours avg data
.PARAMETER AvgLatest
latest perf data
.OUTPUTS

NimbleperfData<PSCustomObject>
#>

function Initialize-NimbleperfData {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Avg1day},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Avg1hour},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Avg8hours},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${AvgLatest}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleperfData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "avg_1day" = ${Avg1day}
            "avg_1hour" = ${Avg1hour}
            "avg_8hours" = ${Avg8hours}
            "avg_latest" = ${AvgLatest}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleperfData<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleperfData<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleperfData<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleperfData {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleperfData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleperfData
        $AllProperties = ("avg_1day", "avg_1hour", "avg_8hours", "avg_latest")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "avg_1day"))) { #optional property not found
            $Avg1day = $null
        } else {
            $Avg1day = $JsonParameters.PSobject.Properties["avg_1day"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "avg_1hour"))) { #optional property not found
            $Avg1hour = $null
        } else {
            $Avg1hour = $JsonParameters.PSobject.Properties["avg_1hour"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "avg_8hours"))) { #optional property not found
            $Avg8hours = $null
        } else {
            $Avg8hours = $JsonParameters.PSobject.Properties["avg_8hours"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "avg_latest"))) { #optional property not found
            $AvgLatest = $null
        } else {
            $AvgLatest = $JsonParameters.PSobject.Properties["avg_latest"].value
        }

        $PSO = [PSCustomObject]@{
            "avg_1day" = ${Avg1day}
            "avg_1hour" = ${Avg1hour}
            "avg_8hours" = ${Avg8hours}
            "avg_latest" = ${AvgLatest}
        }

        return $PSO
    }

}

