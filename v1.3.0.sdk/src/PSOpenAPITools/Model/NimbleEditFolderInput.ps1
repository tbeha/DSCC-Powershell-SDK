#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Edit Nimble / Alletra 6K Folder input.

.PARAMETER AppserverId
Identifier of the application server associated with the folder.
.PARAMETER Description
Text description of folder.
.PARAMETER InheritedVolPerfpolId
Identifier of the default performance policy for a newly created volume.
.PARAMETER LimitIops
IOPS limit for this folder. If limit_iops is not specified when a folder is created, or if limit_iops is set to -1, then the folder has no IOPS limit. IOPS limit should be in range [256, 4294967294] or -1 for unlimited.
.PARAMETER LimitMbps
Throughput limit for this folder in MB/s. If limit_mbps is not specified when a folder is created, or if limit_mbps is set to -1, then the folder has no throughput limit. MBPS limit should be in range [1, 4294967294] or -1 for unlimited.
.PARAMETER LimitSizeBytes
Folder size limit in bytes. If limit_size_bytes is not specified when a folder is created, or if limit_size_bytes is set to -1, then the folder has no limit. Otherwise, a limit smaller than the capacity of the pool can be set. Folders with an agent_type of 'smis' or 'vvol' must have a size limit.
.PARAMETER Name
Name of the folder.
.PARAMETER OverdraftLimitPct
Amount of space to consider as overdraft range for this folder as a percentage of folder used limit. Valid values are from 0% - 200%. This is the limit above the folder usage limit beyond which enforcement action(volume offline/non-writable) is issued.
.PARAMETER ProvisionedLimitSizeBytes
Limit on the provisioned size of volumes in a folder. If provisioned_limit_size_bytes is not specified when a folder is created, or if provisioned_limit_size_bytes is set to -1, then the folder has no provisioned size limit.
.OUTPUTS

NimbleEditFolderInput<PSCustomObject>
#>

function Initialize-NimbleEditFolderInput {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppserverId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InheritedVolPerfpolId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LimitIops},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LimitMbps},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${LimitSizeBytes},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${OverdraftLimitPct},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ProvisionedLimitSizeBytes}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NimbleEditFolderInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "appserver_id" = ${AppserverId}
            "description" = ${Description}
            "inherited_vol_perfpol_id" = ${InheritedVolPerfpolId}
            "limit_iops" = ${LimitIops}
            "limit_mbps" = ${LimitMbps}
            "limit_size_bytes" = ${LimitSizeBytes}
            "name" = ${Name}
            "overdraft_limit_pct" = ${OverdraftLimitPct}
            "provisioned_limit_size_bytes" = ${ProvisionedLimitSizeBytes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NimbleEditFolderInput<PSCustomObject>

.DESCRIPTION

Convert from JSON to NimbleEditFolderInput<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NimbleEditFolderInput<PSCustomObject>
#>
function ConvertFrom-JsonToNimbleEditFolderInput {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NimbleEditFolderInput' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NimbleEditFolderInput
        $AllProperties = ("appserver_id", "description", "inherited_vol_perfpol_id", "limit_iops", "limit_mbps", "limit_size_bytes", "name", "overdraft_limit_pct", "provisioned_limit_size_bytes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "appserver_id"))) { #optional property not found
            $AppserverId = $null
        } else {
            $AppserverId = $JsonParameters.PSobject.Properties["appserver_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "inherited_vol_perfpol_id"))) { #optional property not found
            $InheritedVolPerfpolId = $null
        } else {
            $InheritedVolPerfpolId = $JsonParameters.PSobject.Properties["inherited_vol_perfpol_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "limit_iops"))) { #optional property not found
            $LimitIops = $null
        } else {
            $LimitIops = $JsonParameters.PSobject.Properties["limit_iops"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "limit_mbps"))) { #optional property not found
            $LimitMbps = $null
        } else {
            $LimitMbps = $JsonParameters.PSobject.Properties["limit_mbps"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "limit_size_bytes"))) { #optional property not found
            $LimitSizeBytes = $null
        } else {
            $LimitSizeBytes = $JsonParameters.PSobject.Properties["limit_size_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "overdraft_limit_pct"))) { #optional property not found
            $OverdraftLimitPct = $null
        } else {
            $OverdraftLimitPct = $JsonParameters.PSobject.Properties["overdraft_limit_pct"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "provisioned_limit_size_bytes"))) { #optional property not found
            $ProvisionedLimitSizeBytes = $null
        } else {
            $ProvisionedLimitSizeBytes = $JsonParameters.PSobject.Properties["provisioned_limit_size_bytes"].value
        }

        $PSO = [PSCustomObject]@{
            "appserver_id" = ${AppserverId}
            "description" = ${Description}
            "inherited_vol_perfpol_id" = ${InheritedVolPerfpolId}
            "limit_iops" = ${LimitIops}
            "limit_mbps" = ${LimitMbps}
            "limit_size_bytes" = ${LimitSizeBytes}
            "name" = ${Name}
            "overdraft_limit_pct" = ${OverdraftLimitPct}
            "provisioned_limit_size_bytes" = ${ProvisionedLimitSizeBytes}
        }

        return $PSO
    }

}

