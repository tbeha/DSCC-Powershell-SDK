#
# Data Services Cloud Console API
# Data Services Cloud Console API
# Version: 1.3.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AllowAnalyticsGui
Enable or disable Analytics in Nimble GUI. The data gathered is used to evaluate and improve the product.
.PARAMETER AllowSupportTunnel
Enable or disable support tunnel.
.PARAMETER AutosupportEnabled
Enable or disable autosupport.
.OUTPUTS

EditSupportSettings<PSCustomObject>
#>

function Initialize-EditSupportSettings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowAnalyticsGui},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowSupportTunnel},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AutosupportEnabled}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => EditSupportSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "allow_analytics_gui" = ${AllowAnalyticsGui}
            "allow_support_tunnel" = ${AllowSupportTunnel}
            "autosupport_enabled" = ${AutosupportEnabled}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EditSupportSettings<PSCustomObject>

.DESCRIPTION

Convert from JSON to EditSupportSettings<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EditSupportSettings<PSCustomObject>
#>
function ConvertFrom-JsonToEditSupportSettings {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => EditSupportSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in EditSupportSettings
        $AllProperties = ("allow_analytics_gui", "allow_support_tunnel", "autosupport_enabled")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allow_analytics_gui"))) { #optional property not found
            $AllowAnalyticsGui = $null
        } else {
            $AllowAnalyticsGui = $JsonParameters.PSobject.Properties["allow_analytics_gui"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allow_support_tunnel"))) { #optional property not found
            $AllowSupportTunnel = $null
        } else {
            $AllowSupportTunnel = $JsonParameters.PSobject.Properties["allow_support_tunnel"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "autosupport_enabled"))) { #optional property not found
            $AutosupportEnabled = $null
        } else {
            $AutosupportEnabled = $JsonParameters.PSobject.Properties["autosupport_enabled"].value
        }

        $PSO = [PSCustomObject]@{
            "allow_analytics_gui" = ${AllowAnalyticsGui}
            "allow_support_tunnel" = ${AllowSupportTunnel}
            "autosupport_enabled" = ${AutosupportEnabled}
        }

        return $PSO
    }

}

